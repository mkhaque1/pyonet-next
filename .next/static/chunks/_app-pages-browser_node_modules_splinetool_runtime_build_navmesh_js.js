"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_node_modules_splinetool_runtime_build_navmesh_js"],{

/***/ "(app-pages-browser)/./node_modules/@splinetool/runtime/build/navmesh.js":
/*!***********************************************************!*\
  !*** ./node_modules/@splinetool/runtime/build/navmesh.js ***!
  \***********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nvar Module = function() {\n    var _scriptDir = typeof document !== \"undefined\" && document.currentScript ? document.currentScript.src : undefined;\n    return function(Module) {\n        Module = Module || {};\n        var Module = typeof Module !== \"undefined\" ? Module : {};\n        var readyPromiseResolve, readyPromiseReject;\n        Module[\"ready\"] = new Promise(function(resolve, reject) {\n            readyPromiseResolve = resolve;\n            readyPromiseReject = reject;\n        });\n        var moduleOverrides = {};\n        var key;\n        for(key in Module){\n            if (Module.hasOwnProperty(key)) {\n                moduleOverrides[key] = Module[key];\n            }\n        }\n        var arguments_ = [];\n        var thisProgram = \"./this.program\";\n        var quit_ = function(status, toThrow) {\n            throw toThrow;\n        };\n        var ENVIRONMENT_IS_WEB = true;\n        var ENVIRONMENT_IS_WORKER = false;\n        var scriptDirectory = \"\";\n        function locateFile(path) {\n            if (Module[\"locateFile\"]) {\n                return Module[\"locateFile\"](path, scriptDirectory);\n            }\n            return scriptDirectory + path;\n        }\n        var read_, readAsync, readBinary, setWindowTitle;\n        if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n            if (ENVIRONMENT_IS_WORKER) {\n                scriptDirectory = self.location.href;\n            } else if (typeof document !== \"undefined\" && document.currentScript) {\n                scriptDirectory = document.currentScript.src;\n            }\n            if (_scriptDir) {\n                scriptDirectory = _scriptDir;\n            }\n            if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n                scriptDirectory = scriptDirectory.substr(0, scriptDirectory.replace(/[?#].*/, \"\").lastIndexOf(\"/\") + 1);\n            } else {\n                scriptDirectory = \"\";\n            }\n            {\n                read_ = function(url) {\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, false);\n                    xhr.send(null);\n                    return xhr.responseText;\n                };\n                if (ENVIRONMENT_IS_WORKER) {\n                    readBinary = function(url) {\n                        var xhr = new XMLHttpRequest;\n                        xhr.open(\"GET\", url, false);\n                        xhr.responseType = \"arraybuffer\";\n                        xhr.send(null);\n                        return new Uint8Array(xhr.response);\n                    };\n                }\n                readAsync = function(url, onload, onerror) {\n                    var xhr = new XMLHttpRequest;\n                    xhr.open(\"GET\", url, true);\n                    xhr.responseType = \"arraybuffer\";\n                    xhr.onload = function() {\n                        if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                            onload(xhr.response);\n                            return;\n                        }\n                        onerror();\n                    };\n                    xhr.onerror = onerror;\n                    xhr.send(null);\n                };\n            }\n            setWindowTitle = function(title) {\n                document.title = title;\n            };\n        } else {}\n        var out = Module[\"print\"] || console.log.bind(console);\n        var err = Module[\"printErr\"] || console.warn.bind(console);\n        for(key in moduleOverrides){\n            if (moduleOverrides.hasOwnProperty(key)) {\n                Module[key] = moduleOverrides[key];\n            }\n        }\n        moduleOverrides = null;\n        if (Module[\"arguments\"]) arguments_ = Module[\"arguments\"];\n        if (Module[\"thisProgram\"]) thisProgram = Module[\"thisProgram\"];\n        if (Module[\"quit\"]) quit_ = Module[\"quit\"];\n        function convertJsFunctionToWasm(func, sig) {\n            if (typeof WebAssembly.Function === \"function\") {\n                var typeNames = {\n                    \"i\": \"i32\",\n                    \"j\": \"i64\",\n                    \"f\": \"f32\",\n                    \"d\": \"f64\"\n                };\n                var type = {\n                    parameters: [],\n                    results: sig[0] == \"v\" ? [] : [\n                        typeNames[sig[0]]\n                    ]\n                };\n                for(var i = 1; i < sig.length; ++i){\n                    type.parameters.push(typeNames[sig[i]]);\n                }\n                return new WebAssembly.Function(type, func);\n            }\n            var typeSection = [\n                1,\n                0,\n                1,\n                96\n            ];\n            var sigRet = sig.slice(0, 1);\n            var sigParam = sig.slice(1);\n            var typeCodes = {\n                \"i\": 127,\n                \"j\": 126,\n                \"f\": 125,\n                \"d\": 124\n            };\n            typeSection.push(sigParam.length);\n            for(var i = 0; i < sigParam.length; ++i){\n                typeSection.push(typeCodes[sigParam[i]]);\n            }\n            if (sigRet == \"v\") {\n                typeSection.push(0);\n            } else {\n                typeSection = typeSection.concat([\n                    1,\n                    typeCodes[sigRet]\n                ]);\n            }\n            typeSection[1] = typeSection.length - 2;\n            var bytes = new Uint8Array([\n                0,\n                97,\n                115,\n                109,\n                1,\n                0,\n                0,\n                0\n            ].concat(typeSection, [\n                2,\n                7,\n                1,\n                1,\n                101,\n                1,\n                102,\n                0,\n                0,\n                7,\n                5,\n                1,\n                1,\n                102,\n                0,\n                0\n            ]));\n            var module = new WebAssembly.Module(bytes);\n            var instance = new WebAssembly.Instance(module, {\n                \"e\": {\n                    \"f\": func\n                }\n            });\n            var wrappedFunc = instance.exports[\"f\"];\n            return wrappedFunc;\n        }\n        var freeTableIndexes = [];\n        var functionsInTableMap;\n        function getEmptyTableSlot() {\n            if (freeTableIndexes.length) {\n                return freeTableIndexes.pop();\n            }\n            try {\n                wasmTable.grow(1);\n            } catch (err) {\n                if (!(err instanceof RangeError)) {\n                    throw err;\n                }\n                throw \"Unable to grow wasm table. Set ALLOW_TABLE_GROWTH.\";\n            }\n            return wasmTable.length - 1;\n        }\n        function updateTableMap(offset, count) {\n            for(var i = offset; i < offset + count; i++){\n                var item = getWasmTableEntry(i);\n                if (item) {\n                    functionsInTableMap.set(item, i);\n                }\n            }\n        }\n        function addFunction(func, sig) {\n            if (!functionsInTableMap) {\n                functionsInTableMap = new WeakMap;\n                updateTableMap(0, wasmTable.length);\n            }\n            if (functionsInTableMap.has(func)) {\n                return functionsInTableMap.get(func);\n            }\n            var ret = getEmptyTableSlot();\n            try {\n                setWasmTableEntry(ret, func);\n            } catch (err) {\n                if (!(err instanceof TypeError)) {\n                    throw err;\n                }\n                var wrapped = convertJsFunctionToWasm(func, sig);\n                setWasmTableEntry(ret, wrapped);\n            }\n            functionsInTableMap.set(func, ret);\n            return ret;\n        }\n        var wasmBinary;\n        if (Module[\"wasmBinary\"]) wasmBinary = Module[\"wasmBinary\"];\n        var noExitRuntime = Module[\"noExitRuntime\"] || true;\n        if (typeof WebAssembly !== \"object\") {\n            abort(\"no native wasm support detected\");\n        }\n        var wasmMemory;\n        var ABORT = false;\n        var EXITSTATUS;\n        function assert(condition, text) {\n            if (!condition) {\n                abort(\"Assertion failed: \" + text);\n            }\n        }\n        var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n        function UTF8ArrayToString(heap, idx, maxBytesToRead) {\n            var endIdx = idx + maxBytesToRead;\n            var endPtr = idx;\n            while(heap[endPtr] && !(endPtr >= endIdx))++endPtr;\n            if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {\n                return UTF8Decoder.decode(heap.subarray(idx, endPtr));\n            } else {\n                var str = \"\";\n                while(idx < endPtr){\n                    var u0 = heap[idx++];\n                    if (!(u0 & 128)) {\n                        str += String.fromCharCode(u0);\n                        continue;\n                    }\n                    var u1 = heap[idx++] & 63;\n                    if ((u0 & 224) == 192) {\n                        str += String.fromCharCode((u0 & 31) << 6 | u1);\n                        continue;\n                    }\n                    var u2 = heap[idx++] & 63;\n                    if ((u0 & 240) == 224) {\n                        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n                    } else {\n                        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;\n                    }\n                    if (u0 < 65536) {\n                        str += String.fromCharCode(u0);\n                    } else {\n                        var ch = u0 - 65536;\n                        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n                    }\n                }\n            }\n            return str;\n        }\n        function UTF8ToString(ptr, maxBytesToRead) {\n            return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n        }\n        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {\n            if (!(maxBytesToWrite > 0)) return 0;\n            var startIdx = outIdx;\n            var endIdx = outIdx + maxBytesToWrite - 1;\n            for(var i = 0; i < str.length; ++i){\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) {\n                    var u1 = str.charCodeAt(++i);\n                    u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n                }\n                if (u <= 127) {\n                    if (outIdx >= endIdx) break;\n                    heap[outIdx++] = u;\n                } else if (u <= 2047) {\n                    if (outIdx + 1 >= endIdx) break;\n                    heap[outIdx++] = 192 | u >> 6;\n                    heap[outIdx++] = 128 | u & 63;\n                } else if (u <= 65535) {\n                    if (outIdx + 2 >= endIdx) break;\n                    heap[outIdx++] = 224 | u >> 12;\n                    heap[outIdx++] = 128 | u >> 6 & 63;\n                    heap[outIdx++] = 128 | u & 63;\n                } else {\n                    if (outIdx + 3 >= endIdx) break;\n                    heap[outIdx++] = 240 | u >> 18;\n                    heap[outIdx++] = 128 | u >> 12 & 63;\n                    heap[outIdx++] = 128 | u >> 6 & 63;\n                    heap[outIdx++] = 128 | u & 63;\n                }\n            }\n            heap[outIdx] = 0;\n            return outIdx - startIdx;\n        }\n        function lengthBytesUTF8(str) {\n            var len = 0;\n            for(var i = 0; i < str.length; ++i){\n                var u = str.charCodeAt(i);\n                if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;\n                if (u <= 127) ++len;\n                else if (u <= 2047) len += 2;\n                else if (u <= 65535) len += 3;\n                else len += 4;\n            }\n            return len;\n        }\n        function writeArrayToMemory(array, buffer) {\n            HEAP8.set(array, buffer);\n        }\n        function writeAsciiToMemory(str, buffer, dontAddNull) {\n            for(var i = 0; i < str.length; ++i){\n                HEAP8[buffer++ >> 0] = str.charCodeAt(i);\n            }\n            if (!dontAddNull) HEAP8[buffer >> 0] = 0;\n        }\n        function alignUp(x, multiple) {\n            if (x % multiple > 0) {\n                x += multiple - x % multiple;\n            }\n            return x;\n        }\n        var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n        function updateGlobalBufferAndViews(buf) {\n            buffer = buf;\n            Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n            Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n            Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n            Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n            Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n            Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n            Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n            Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n        }\n        var INITIAL_MEMORY = Module[\"INITIAL_MEMORY\"] || 16777216;\n        var wasmTable;\n        var __ATPRERUN__ = [];\n        var __ATINIT__ = [];\n        var __ATPOSTRUN__ = [];\n        var runtimeInitialized = false;\n        function preRun() {\n            if (Module[\"preRun\"]) {\n                if (typeof Module[\"preRun\"] == \"function\") Module[\"preRun\"] = [\n                    Module[\"preRun\"]\n                ];\n                while(Module[\"preRun\"].length){\n                    addOnPreRun(Module[\"preRun\"].shift());\n                }\n            }\n            callRuntimeCallbacks(__ATPRERUN__);\n        }\n        function initRuntime() {\n            runtimeInitialized = true;\n            callRuntimeCallbacks(__ATINIT__);\n        }\n        function postRun() {\n            if (Module[\"postRun\"]) {\n                if (typeof Module[\"postRun\"] == \"function\") Module[\"postRun\"] = [\n                    Module[\"postRun\"]\n                ];\n                while(Module[\"postRun\"].length){\n                    addOnPostRun(Module[\"postRun\"].shift());\n                }\n            }\n            callRuntimeCallbacks(__ATPOSTRUN__);\n        }\n        function addOnPreRun(cb) {\n            __ATPRERUN__.unshift(cb);\n        }\n        function addOnInit(cb) {\n            __ATINIT__.unshift(cb);\n        }\n        function addOnPostRun(cb) {\n            __ATPOSTRUN__.unshift(cb);\n        }\n        var runDependencies = 0;\n        var runDependencyWatcher = null;\n        var dependenciesFulfilled = null;\n        function addRunDependency(id) {\n            runDependencies++;\n            if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies);\n            }\n        }\n        function removeRunDependency(id) {\n            runDependencies--;\n            if (Module[\"monitorRunDependencies\"]) {\n                Module[\"monitorRunDependencies\"](runDependencies);\n            }\n            if (runDependencies == 0) {\n                if (runDependencyWatcher !== null) {\n                    clearInterval(runDependencyWatcher);\n                    runDependencyWatcher = null;\n                }\n                if (dependenciesFulfilled) {\n                    var callback = dependenciesFulfilled;\n                    dependenciesFulfilled = null;\n                    callback();\n                }\n            }\n        }\n        Module[\"preloadedImages\"] = {};\n        Module[\"preloadedAudios\"] = {};\n        function abort(what) {\n            {\n                if (Module[\"onAbort\"]) {\n                    Module[\"onAbort\"](what);\n                }\n            }\n            what = \"Aborted(\" + what + \")\";\n            err(what);\n            ABORT = true;\n            EXITSTATUS = 1;\n            what += \". Build with -s ASSERTIONS=1 for more info.\";\n            var e = new WebAssembly.RuntimeError(what);\n            readyPromiseReject(e);\n            throw e;\n        }\n        var dataURIPrefix = \"data:application/octet-stream;base64,\";\n        function isDataURI(filename) {\n            return filename.startsWith(dataURIPrefix);\n        }\n        var wasmBinaryFile;\n        wasmBinaryFile = \"navmesh.wasm\";\n        if (!isDataURI(wasmBinaryFile)) {\n            wasmBinaryFile = locateFile(wasmBinaryFile);\n        }\n        function getBinary(file) {\n            try {\n                if (file == wasmBinaryFile && wasmBinary) {\n                    return new Uint8Array(wasmBinary);\n                }\n                if (readBinary) {\n                    return readBinary(file);\n                } else {\n                    throw \"both async and sync fetching of the wasm failed\";\n                }\n            } catch (err) {\n                abort(err);\n            }\n        }\n        function getBinaryPromise() {\n            if (!wasmBinary && (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER)) {\n                if (typeof fetch === \"function\") {\n                    return fetch(wasmBinaryFile, {\n                        credentials: \"same-origin\"\n                    }).then(function(response) {\n                        if (!response[\"ok\"]) {\n                            throw \"failed to load wasm binary file at '\" + wasmBinaryFile + \"'\";\n                        }\n                        return response[\"arrayBuffer\"]();\n                    }).catch(function() {\n                        return getBinary(wasmBinaryFile);\n                    });\n                }\n            }\n            return Promise.resolve().then(function() {\n                return getBinary(wasmBinaryFile);\n            });\n        }\n        function createWasm() {\n            var info = {\n                \"a\": asmLibraryArg\n            };\n            function receiveInstance(instance, module) {\n                var exports = instance.exports;\n                Module[\"asm\"] = exports;\n                wasmMemory = Module[\"asm\"][\"m\"];\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                wasmTable = Module[\"asm\"][\"Jb\"];\n                addOnInit(Module[\"asm\"][\"n\"]);\n                removeRunDependency(\"wasm-instantiate\");\n            }\n            addRunDependency(\"wasm-instantiate\");\n            function receiveInstantiationResult(result) {\n                receiveInstance(result[\"instance\"]);\n            }\n            function instantiateArrayBuffer(receiver) {\n                return getBinaryPromise().then(function(binary) {\n                    return WebAssembly.instantiate(binary, info);\n                }).then(function(instance) {\n                    return instance;\n                }).then(receiver, function(reason) {\n                    err(\"failed to asynchronously prepare wasm: \" + reason);\n                    abort(reason);\n                });\n            }\n            function instantiateAsync() {\n                if (!wasmBinary && typeof WebAssembly.instantiateStreaming === \"function\" && !isDataURI(wasmBinaryFile) && typeof fetch === \"function\") {\n                    return fetch(wasmBinaryFile, {\n                        credentials: \"same-origin\"\n                    }).then(function(response) {\n                        var result = WebAssembly.instantiateStreaming(response, info);\n                        return result.then(receiveInstantiationResult, function(reason) {\n                            err(\"wasm streaming compile failed: \" + reason);\n                            err(\"falling back to ArrayBuffer instantiation\");\n                            return instantiateArrayBuffer(receiveInstantiationResult);\n                        });\n                    });\n                } else {\n                    return instantiateArrayBuffer(receiveInstantiationResult);\n                }\n            }\n            if (Module[\"instantiateWasm\"]) {\n                try {\n                    var exports = Module[\"instantiateWasm\"](info, receiveInstance);\n                    return exports;\n                } catch (e) {\n                    err(\"Module.instantiateWasm callback failed with error: \" + e);\n                    return false;\n                }\n            }\n            instantiateAsync().catch(readyPromiseReject);\n            return {};\n        }\n        function callRuntimeCallbacks(callbacks) {\n            while(callbacks.length > 0){\n                var callback = callbacks.shift();\n                if (typeof callback == \"function\") {\n                    callback(Module);\n                    continue;\n                }\n                var func = callback.func;\n                if (typeof func === \"number\") {\n                    if (callback.arg === undefined) {\n                        getWasmTableEntry(func)();\n                    } else {\n                        getWasmTableEntry(func)(callback.arg);\n                    }\n                } else {\n                    func(callback.arg === undefined ? null : callback.arg);\n                }\n            }\n        }\n        var wasmTableMirror = [];\n        function getWasmTableEntry(funcPtr) {\n            var func = wasmTableMirror[funcPtr];\n            if (!func) {\n                if (funcPtr >= wasmTableMirror.length) wasmTableMirror.length = funcPtr + 1;\n                wasmTableMirror[funcPtr] = func = wasmTable.get(funcPtr);\n            }\n            return func;\n        }\n        function setWasmTableEntry(idx, func) {\n            wasmTable.set(idx, func);\n            wasmTableMirror[idx] = func;\n        }\n        function ___cxa_allocate_exception(size) {\n            return _malloc(size + 16) + 16;\n        }\n        function ExceptionInfo(excPtr) {\n            this.excPtr = excPtr;\n            this.ptr = excPtr - 16;\n            this.set_type = function(type) {\n                HEAP32[this.ptr + 4 >> 2] = type;\n            };\n            this.get_type = function() {\n                return HEAP32[this.ptr + 4 >> 2];\n            };\n            this.set_destructor = function(destructor) {\n                HEAP32[this.ptr + 8 >> 2] = destructor;\n            };\n            this.get_destructor = function() {\n                return HEAP32[this.ptr + 8 >> 2];\n            };\n            this.set_refcount = function(refcount) {\n                HEAP32[this.ptr >> 2] = refcount;\n            };\n            this.set_caught = function(caught) {\n                caught = caught ? 1 : 0;\n                HEAP8[this.ptr + 12 >> 0] = caught;\n            };\n            this.get_caught = function() {\n                return HEAP8[this.ptr + 12 >> 0] != 0;\n            };\n            this.set_rethrown = function(rethrown) {\n                rethrown = rethrown ? 1 : 0;\n                HEAP8[this.ptr + 13 >> 0] = rethrown;\n            };\n            this.get_rethrown = function() {\n                return HEAP8[this.ptr + 13 >> 0] != 0;\n            };\n            this.init = function(type, destructor) {\n                this.set_type(type);\n                this.set_destructor(destructor);\n                this.set_refcount(0);\n                this.set_caught(false);\n                this.set_rethrown(false);\n            };\n            this.add_ref = function() {\n                var value = HEAP32[this.ptr >> 2];\n                HEAP32[this.ptr >> 2] = value + 1;\n            };\n            this.release_ref = function() {\n                var prev = HEAP32[this.ptr >> 2];\n                HEAP32[this.ptr >> 2] = prev - 1;\n                return prev === 1;\n            };\n        }\n        var exceptionLast = 0;\n        var uncaughtExceptionCount = 0;\n        function ___cxa_throw(ptr, type, destructor) {\n            var info = new ExceptionInfo(ptr);\n            info.init(type, destructor);\n            exceptionLast = ptr;\n            uncaughtExceptionCount++;\n            throw ptr;\n        }\n        function _abort() {\n            abort(\"\");\n        }\n        function _emscripten_memcpy_big(dest, src, num) {\n            HEAPU8.copyWithin(dest, src, src + num);\n        }\n        function emscripten_realloc_buffer(size) {\n            try {\n                wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\n                updateGlobalBufferAndViews(wasmMemory.buffer);\n                return 1;\n            } catch (e) {}\n        }\n        function _emscripten_resize_heap(requestedSize) {\n            var oldSize = HEAPU8.length;\n            requestedSize = requestedSize >>> 0;\n            var maxHeapSize = 2147483648;\n            if (requestedSize > maxHeapSize) {\n                return false;\n            }\n            for(var cutDown = 1; cutDown <= 4; cutDown *= 2){\n                var overGrownHeapSize = oldSize * (1 + .2 / cutDown);\n                overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\n                var newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\n                var replacement = emscripten_realloc_buffer(newSize);\n                if (replacement) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        var ENV = {};\n        function getExecutableName() {\n            return thisProgram || \"./this.program\";\n        }\n        function getEnvStrings() {\n            if (!getEnvStrings.strings) {\n                var lang = (typeof navigator === \"object\" && navigator.languages && navigator.languages[0] || \"C\").replace(\"-\", \"_\") + \".UTF-8\";\n                var env = {\n                    \"USER\": \"web_user\",\n                    \"LOGNAME\": \"web_user\",\n                    \"PATH\": \"/\",\n                    \"PWD\": \"/\",\n                    \"HOME\": \"/home/web_user\",\n                    \"LANG\": lang,\n                    \"_\": getExecutableName()\n                };\n                for(var x in ENV){\n                    if (ENV[x] === undefined) delete env[x];\n                    else env[x] = ENV[x];\n                }\n                var strings = [];\n                for(var x in env){\n                    strings.push(x + \"=\" + env[x]);\n                }\n                getEnvStrings.strings = strings;\n            }\n            return getEnvStrings.strings;\n        }\n        var SYSCALLS = {\n            mappings: {},\n            buffers: [\n                null,\n                [],\n                []\n            ],\n            printChar: function(stream, curr) {\n                var buffer = SYSCALLS.buffers[stream];\n                if (curr === 0 || curr === 10) {\n                    (stream === 1 ? out : err)(UTF8ArrayToString(buffer, 0));\n                    buffer.length = 0;\n                } else {\n                    buffer.push(curr);\n                }\n            },\n            varargs: undefined,\n            get: function() {\n                SYSCALLS.varargs += 4;\n                var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];\n                return ret;\n            },\n            getStr: function(ptr) {\n                var ret = UTF8ToString(ptr);\n                return ret;\n            },\n            get64: function(low, high) {\n                return low;\n            }\n        };\n        function _environ_get(__environ, environ_buf) {\n            var bufSize = 0;\n            getEnvStrings().forEach(function(string, i) {\n                var ptr = environ_buf + bufSize;\n                HEAP32[__environ + i * 4 >> 2] = ptr;\n                writeAsciiToMemory(string, ptr);\n                bufSize += string.length + 1;\n            });\n            return 0;\n        }\n        function _environ_sizes_get(penviron_count, penviron_buf_size) {\n            var strings = getEnvStrings();\n            HEAP32[penviron_count >> 2] = strings.length;\n            var bufSize = 0;\n            strings.forEach(function(string) {\n                bufSize += string.length + 1;\n            });\n            HEAP32[penviron_buf_size >> 2] = bufSize;\n            return 0;\n        }\n        function _fd_close(fd) {\n            return 0;\n        }\n        function _fd_read(fd, iov, iovcnt, pnum) {\n            var stream = SYSCALLS.getStreamFromFD(fd);\n            var num = SYSCALLS.doReadv(stream, iov, iovcnt);\n            HEAP32[pnum >> 2] = num;\n            return 0;\n        }\n        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {}\n        function _fd_write(fd, iov, iovcnt, pnum) {\n            var num = 0;\n            for(var i = 0; i < iovcnt; i++){\n                var ptr = HEAP32[iov >> 2];\n                var len = HEAP32[iov + 4 >> 2];\n                iov += 8;\n                for(var j = 0; j < len; j++){\n                    SYSCALLS.printChar(fd, HEAPU8[ptr + j]);\n                }\n                num += len;\n            }\n            HEAP32[pnum >> 2] = num;\n            return 0;\n        }\n        function __isLeapYear(year) {\n            return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);\n        }\n        function __arraySum(array, index) {\n            var sum = 0;\n            for(var i = 0; i <= index; sum += array[i++]){}\n            return sum;\n        }\n        var __MONTH_DAYS_LEAP = [\n            31,\n            29,\n            31,\n            30,\n            31,\n            30,\n            31,\n            31,\n            30,\n            31,\n            30,\n            31\n        ];\n        var __MONTH_DAYS_REGULAR = [\n            31,\n            28,\n            31,\n            30,\n            31,\n            30,\n            31,\n            31,\n            30,\n            31,\n            30,\n            31\n        ];\n        function __addDays(date, days) {\n            var newDate = new Date(date.getTime());\n            while(days > 0){\n                var leap = __isLeapYear(newDate.getFullYear());\n                var currentMonth = newDate.getMonth();\n                var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];\n                if (days > daysInCurrentMonth - newDate.getDate()) {\n                    days -= daysInCurrentMonth - newDate.getDate() + 1;\n                    newDate.setDate(1);\n                    if (currentMonth < 11) {\n                        newDate.setMonth(currentMonth + 1);\n                    } else {\n                        newDate.setMonth(0);\n                        newDate.setFullYear(newDate.getFullYear() + 1);\n                    }\n                } else {\n                    newDate.setDate(newDate.getDate() + days);\n                    return newDate;\n                }\n            }\n            return newDate;\n        }\n        function _strftime(s, maxsize, format, tm) {\n            var tm_zone = HEAP32[tm + 40 >> 2];\n            var date = {\n                tm_sec: HEAP32[tm >> 2],\n                tm_min: HEAP32[tm + 4 >> 2],\n                tm_hour: HEAP32[tm + 8 >> 2],\n                tm_mday: HEAP32[tm + 12 >> 2],\n                tm_mon: HEAP32[tm + 16 >> 2],\n                tm_year: HEAP32[tm + 20 >> 2],\n                tm_wday: HEAP32[tm + 24 >> 2],\n                tm_yday: HEAP32[tm + 28 >> 2],\n                tm_isdst: HEAP32[tm + 32 >> 2],\n                tm_gmtoff: HEAP32[tm + 36 >> 2],\n                tm_zone: tm_zone ? UTF8ToString(tm_zone) : \"\"\n            };\n            var pattern = UTF8ToString(format);\n            var EXPANSION_RULES_1 = {\n                \"%c\": \"%a %b %d %H:%M:%S %Y\",\n                \"%D\": \"%m/%d/%y\",\n                \"%F\": \"%Y-%m-%d\",\n                \"%h\": \"%b\",\n                \"%r\": \"%I:%M:%S %p\",\n                \"%R\": \"%H:%M\",\n                \"%T\": \"%H:%M:%S\",\n                \"%x\": \"%m/%d/%y\",\n                \"%X\": \"%H:%M:%S\",\n                \"%Ec\": \"%c\",\n                \"%EC\": \"%C\",\n                \"%Ex\": \"%m/%d/%y\",\n                \"%EX\": \"%H:%M:%S\",\n                \"%Ey\": \"%y\",\n                \"%EY\": \"%Y\",\n                \"%Od\": \"%d\",\n                \"%Oe\": \"%e\",\n                \"%OH\": \"%H\",\n                \"%OI\": \"%I\",\n                \"%Om\": \"%m\",\n                \"%OM\": \"%M\",\n                \"%OS\": \"%S\",\n                \"%Ou\": \"%u\",\n                \"%OU\": \"%U\",\n                \"%OV\": \"%V\",\n                \"%Ow\": \"%w\",\n                \"%OW\": \"%W\",\n                \"%Oy\": \"%y\"\n            };\n            for(var rule in EXPANSION_RULES_1){\n                pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_1[rule]);\n            }\n            var WEEKDAYS = [\n                \"Sunday\",\n                \"Monday\",\n                \"Tuesday\",\n                \"Wednesday\",\n                \"Thursday\",\n                \"Friday\",\n                \"Saturday\"\n            ];\n            var MONTHS = [\n                \"January\",\n                \"February\",\n                \"March\",\n                \"April\",\n                \"May\",\n                \"June\",\n                \"July\",\n                \"August\",\n                \"September\",\n                \"October\",\n                \"November\",\n                \"December\"\n            ];\n            function leadingSomething(value, digits, character) {\n                var str = typeof value === \"number\" ? value.toString() : value || \"\";\n                while(str.length < digits){\n                    str = character[0] + str;\n                }\n                return str;\n            }\n            function leadingNulls(value, digits) {\n                return leadingSomething(value, digits, \"0\");\n            }\n            function compareByDay(date1, date2) {\n                function sgn(value) {\n                    return value < 0 ? -1 : value > 0 ? 1 : 0;\n                }\n                var compare;\n                if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {\n                    if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {\n                        compare = sgn(date1.getDate() - date2.getDate());\n                    }\n                }\n                return compare;\n            }\n            function getFirstWeekStartDate(janFourth) {\n                switch(janFourth.getDay()){\n                    case 0:\n                        return new Date(janFourth.getFullYear() - 1, 11, 29);\n                    case 1:\n                        return janFourth;\n                    case 2:\n                        return new Date(janFourth.getFullYear(), 0, 3);\n                    case 3:\n                        return new Date(janFourth.getFullYear(), 0, 2);\n                    case 4:\n                        return new Date(janFourth.getFullYear(), 0, 1);\n                    case 5:\n                        return new Date(janFourth.getFullYear() - 1, 11, 31);\n                    case 6:\n                        return new Date(janFourth.getFullYear() - 1, 11, 30);\n                }\n            }\n            function getWeekBasedYear(date) {\n                var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n                var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);\n                var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);\n                var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {\n                    if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {\n                        return thisDate.getFullYear() + 1;\n                    } else {\n                        return thisDate.getFullYear();\n                    }\n                } else {\n                    return thisDate.getFullYear() - 1;\n                }\n            }\n            var EXPANSION_RULES_2 = {\n                \"%a\": function(date) {\n                    return WEEKDAYS[date.tm_wday].substring(0, 3);\n                },\n                \"%A\": function(date) {\n                    return WEEKDAYS[date.tm_wday];\n                },\n                \"%b\": function(date) {\n                    return MONTHS[date.tm_mon].substring(0, 3);\n                },\n                \"%B\": function(date) {\n                    return MONTHS[date.tm_mon];\n                },\n                \"%C\": function(date) {\n                    var year = date.tm_year + 1900;\n                    return leadingNulls(year / 100 | 0, 2);\n                },\n                \"%d\": function(date) {\n                    return leadingNulls(date.tm_mday, 2);\n                },\n                \"%e\": function(date) {\n                    return leadingSomething(date.tm_mday, 2, \" \");\n                },\n                \"%g\": function(date) {\n                    return getWeekBasedYear(date).toString().substring(2);\n                },\n                \"%G\": function(date) {\n                    return getWeekBasedYear(date);\n                },\n                \"%H\": function(date) {\n                    return leadingNulls(date.tm_hour, 2);\n                },\n                \"%I\": function(date) {\n                    var twelveHour = date.tm_hour;\n                    if (twelveHour == 0) twelveHour = 12;\n                    else if (twelveHour > 12) twelveHour -= 12;\n                    return leadingNulls(twelveHour, 2);\n                },\n                \"%j\": function(date) {\n                    return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);\n                },\n                \"%m\": function(date) {\n                    return leadingNulls(date.tm_mon + 1, 2);\n                },\n                \"%M\": function(date) {\n                    return leadingNulls(date.tm_min, 2);\n                },\n                \"%n\": function() {\n                    return \"\\n\";\n                },\n                \"%p\": function(date) {\n                    if (date.tm_hour >= 0 && date.tm_hour < 12) {\n                        return \"AM\";\n                    } else {\n                        return \"PM\";\n                    }\n                },\n                \"%S\": function(date) {\n                    return leadingNulls(date.tm_sec, 2);\n                },\n                \"%t\": function() {\n                    return \"\t\";\n                },\n                \"%u\": function(date) {\n                    return date.tm_wday || 7;\n                },\n                \"%U\": function(date) {\n                    var janFirst = new Date(date.tm_year + 1900, 0, 1);\n                    var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());\n                    var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n                    if (compareByDay(firstSunday, endDate) < 0) {\n                        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n                        var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();\n                        var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n                        return leadingNulls(Math.ceil(days / 7), 2);\n                    }\n                    return compareByDay(firstSunday, janFirst) === 0 ? \"01\" : \"00\";\n                },\n                \"%V\": function(date) {\n                    var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);\n                    var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);\n                    var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);\n                    var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);\n                    var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);\n                    if (compareByDay(endDate, firstWeekStartThisYear) < 0) {\n                        return \"53\";\n                    }\n                    if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {\n                        return \"01\";\n                    }\n                    var daysDifference;\n                    if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {\n                        daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();\n                    } else {\n                        daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();\n                    }\n                    return leadingNulls(Math.ceil(daysDifference / 7), 2);\n                },\n                \"%w\": function(date) {\n                    return date.tm_wday;\n                },\n                \"%W\": function(date) {\n                    var janFirst = new Date(date.tm_year, 0, 1);\n                    var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);\n                    var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);\n                    if (compareByDay(firstMonday, endDate) < 0) {\n                        var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;\n                        var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();\n                        var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();\n                        return leadingNulls(Math.ceil(days / 7), 2);\n                    }\n                    return compareByDay(firstMonday, janFirst) === 0 ? \"01\" : \"00\";\n                },\n                \"%y\": function(date) {\n                    return (date.tm_year + 1900).toString().substring(2);\n                },\n                \"%Y\": function(date) {\n                    return date.tm_year + 1900;\n                },\n                \"%z\": function(date) {\n                    var off = date.tm_gmtoff;\n                    var ahead = off >= 0;\n                    off = Math.abs(off) / 60;\n                    off = off / 60 * 100 + off % 60;\n                    return (ahead ? \"+\" : \"-\") + String(\"0000\" + off).slice(-4);\n                },\n                \"%Z\": function(date) {\n                    return date.tm_zone;\n                },\n                \"%%\": function() {\n                    return \"%\";\n                }\n            };\n            for(var rule in EXPANSION_RULES_2){\n                if (pattern.includes(rule)) {\n                    pattern = pattern.replace(new RegExp(rule, \"g\"), EXPANSION_RULES_2[rule](date));\n                }\n            }\n            var bytes = intArrayFromString(pattern, false);\n            if (bytes.length > maxsize) {\n                return 0;\n            }\n            writeArrayToMemory(bytes, s);\n            return bytes.length - 1;\n        }\n        function _strftime_l(s, maxsize, format, tm) {\n            return _strftime(s, maxsize, format, tm);\n        }\n        function intArrayFromString(stringy, dontAddNull, length) {\n            var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;\n            var u8array = new Array(len);\n            var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);\n            if (dontAddNull) u8array.length = numBytesWritten;\n            return u8array;\n        }\n        var asmLibraryArg = {\n            \"l\": ___cxa_allocate_exception,\n            \"k\": ___cxa_throw,\n            \"b\": _abort,\n            \"j\": _emscripten_memcpy_big,\n            \"a\": _emscripten_resize_heap,\n            \"g\": _environ_get,\n            \"h\": _environ_sizes_get,\n            \"c\": _fd_close,\n            \"e\": _fd_read,\n            \"i\": _fd_seek,\n            \"d\": _fd_write,\n            \"f\": _strftime_l\n        };\n        var asm = createWasm();\n        var ___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = function() {\n            return (___wasm_call_ctors = Module[\"___wasm_call_ctors\"] = Module[\"asm\"][\"n\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_VoidPtr___destroy___0 = Module[\"_emscripten_bind_VoidPtr___destroy___0\"] = function() {\n            return (_emscripten_bind_VoidPtr___destroy___0 = Module[\"_emscripten_bind_VoidPtr___destroy___0\"] = Module[\"asm\"][\"o\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_rcConfig_0 = Module[\"_emscripten_bind_rcConfig_rcConfig_0\"] = function() {\n            return (_emscripten_bind_rcConfig_rcConfig_0 = Module[\"_emscripten_bind_rcConfig_rcConfig_0\"] = Module[\"asm\"][\"p\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_width_0 = Module[\"_emscripten_bind_rcConfig_get_width_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_width_0 = Module[\"_emscripten_bind_rcConfig_get_width_0\"] = Module[\"asm\"][\"q\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_width_1 = Module[\"_emscripten_bind_rcConfig_set_width_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_width_1 = Module[\"_emscripten_bind_rcConfig_set_width_1\"] = Module[\"asm\"][\"r\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_height_0 = Module[\"_emscripten_bind_rcConfig_get_height_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_height_0 = Module[\"_emscripten_bind_rcConfig_get_height_0\"] = Module[\"asm\"][\"s\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_height_1 = Module[\"_emscripten_bind_rcConfig_set_height_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_height_1 = Module[\"_emscripten_bind_rcConfig_set_height_1\"] = Module[\"asm\"][\"t\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_tileSize_0 = Module[\"_emscripten_bind_rcConfig_get_tileSize_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_tileSize_0 = Module[\"_emscripten_bind_rcConfig_get_tileSize_0\"] = Module[\"asm\"][\"u\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_tileSize_1 = Module[\"_emscripten_bind_rcConfig_set_tileSize_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_tileSize_1 = Module[\"_emscripten_bind_rcConfig_set_tileSize_1\"] = Module[\"asm\"][\"v\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_borderSize_0 = Module[\"_emscripten_bind_rcConfig_get_borderSize_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_borderSize_0 = Module[\"_emscripten_bind_rcConfig_get_borderSize_0\"] = Module[\"asm\"][\"w\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_borderSize_1 = Module[\"_emscripten_bind_rcConfig_set_borderSize_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_borderSize_1 = Module[\"_emscripten_bind_rcConfig_set_borderSize_1\"] = Module[\"asm\"][\"x\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_cs_0 = Module[\"_emscripten_bind_rcConfig_get_cs_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_cs_0 = Module[\"_emscripten_bind_rcConfig_get_cs_0\"] = Module[\"asm\"][\"y\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_cs_1 = Module[\"_emscripten_bind_rcConfig_set_cs_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_cs_1 = Module[\"_emscripten_bind_rcConfig_set_cs_1\"] = Module[\"asm\"][\"z\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_ch_0 = Module[\"_emscripten_bind_rcConfig_get_ch_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_ch_0 = Module[\"_emscripten_bind_rcConfig_get_ch_0\"] = Module[\"asm\"][\"A\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_ch_1 = Module[\"_emscripten_bind_rcConfig_set_ch_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_ch_1 = Module[\"_emscripten_bind_rcConfig_set_ch_1\"] = Module[\"asm\"][\"B\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_bmin_1 = Module[\"_emscripten_bind_rcConfig_get_bmin_1\"] = function() {\n            return (_emscripten_bind_rcConfig_get_bmin_1 = Module[\"_emscripten_bind_rcConfig_get_bmin_1\"] = Module[\"asm\"][\"C\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_bmin_2 = Module[\"_emscripten_bind_rcConfig_set_bmin_2\"] = function() {\n            return (_emscripten_bind_rcConfig_set_bmin_2 = Module[\"_emscripten_bind_rcConfig_set_bmin_2\"] = Module[\"asm\"][\"D\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_bmax_1 = Module[\"_emscripten_bind_rcConfig_get_bmax_1\"] = function() {\n            return (_emscripten_bind_rcConfig_get_bmax_1 = Module[\"_emscripten_bind_rcConfig_get_bmax_1\"] = Module[\"asm\"][\"E\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_bmax_2 = Module[\"_emscripten_bind_rcConfig_set_bmax_2\"] = function() {\n            return (_emscripten_bind_rcConfig_set_bmax_2 = Module[\"_emscripten_bind_rcConfig_set_bmax_2\"] = Module[\"asm\"][\"F\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_walkableSlopeAngle_0 = Module[\"_emscripten_bind_rcConfig_get_walkableSlopeAngle_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_walkableSlopeAngle_0 = Module[\"_emscripten_bind_rcConfig_get_walkableSlopeAngle_0\"] = Module[\"asm\"][\"G\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_walkableSlopeAngle_1 = Module[\"_emscripten_bind_rcConfig_set_walkableSlopeAngle_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_walkableSlopeAngle_1 = Module[\"_emscripten_bind_rcConfig_set_walkableSlopeAngle_1\"] = Module[\"asm\"][\"H\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_walkableHeight_0 = Module[\"_emscripten_bind_rcConfig_get_walkableHeight_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_walkableHeight_0 = Module[\"_emscripten_bind_rcConfig_get_walkableHeight_0\"] = Module[\"asm\"][\"I\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_walkableHeight_1 = Module[\"_emscripten_bind_rcConfig_set_walkableHeight_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_walkableHeight_1 = Module[\"_emscripten_bind_rcConfig_set_walkableHeight_1\"] = Module[\"asm\"][\"J\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_walkableClimb_0 = Module[\"_emscripten_bind_rcConfig_get_walkableClimb_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_walkableClimb_0 = Module[\"_emscripten_bind_rcConfig_get_walkableClimb_0\"] = Module[\"asm\"][\"K\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_walkableClimb_1 = Module[\"_emscripten_bind_rcConfig_set_walkableClimb_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_walkableClimb_1 = Module[\"_emscripten_bind_rcConfig_set_walkableClimb_1\"] = Module[\"asm\"][\"L\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_walkableRadius_0 = Module[\"_emscripten_bind_rcConfig_get_walkableRadius_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_walkableRadius_0 = Module[\"_emscripten_bind_rcConfig_get_walkableRadius_0\"] = Module[\"asm\"][\"M\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_walkableRadius_1 = Module[\"_emscripten_bind_rcConfig_set_walkableRadius_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_walkableRadius_1 = Module[\"_emscripten_bind_rcConfig_set_walkableRadius_1\"] = Module[\"asm\"][\"N\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_maxEdgeLen_0 = Module[\"_emscripten_bind_rcConfig_get_maxEdgeLen_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_maxEdgeLen_0 = Module[\"_emscripten_bind_rcConfig_get_maxEdgeLen_0\"] = Module[\"asm\"][\"O\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_maxEdgeLen_1 = Module[\"_emscripten_bind_rcConfig_set_maxEdgeLen_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_maxEdgeLen_1 = Module[\"_emscripten_bind_rcConfig_set_maxEdgeLen_1\"] = Module[\"asm\"][\"P\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_maxSimplificationError_0 = Module[\"_emscripten_bind_rcConfig_get_maxSimplificationError_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_maxSimplificationError_0 = Module[\"_emscripten_bind_rcConfig_get_maxSimplificationError_0\"] = Module[\"asm\"][\"Q\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_maxSimplificationError_1 = Module[\"_emscripten_bind_rcConfig_set_maxSimplificationError_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_maxSimplificationError_1 = Module[\"_emscripten_bind_rcConfig_set_maxSimplificationError_1\"] = Module[\"asm\"][\"R\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_minRegionArea_0 = Module[\"_emscripten_bind_rcConfig_get_minRegionArea_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_minRegionArea_0 = Module[\"_emscripten_bind_rcConfig_get_minRegionArea_0\"] = Module[\"asm\"][\"S\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_minRegionArea_1 = Module[\"_emscripten_bind_rcConfig_set_minRegionArea_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_minRegionArea_1 = Module[\"_emscripten_bind_rcConfig_set_minRegionArea_1\"] = Module[\"asm\"][\"T\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_mergeRegionArea_0 = Module[\"_emscripten_bind_rcConfig_get_mergeRegionArea_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_mergeRegionArea_0 = Module[\"_emscripten_bind_rcConfig_get_mergeRegionArea_0\"] = Module[\"asm\"][\"U\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_mergeRegionArea_1 = Module[\"_emscripten_bind_rcConfig_set_mergeRegionArea_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_mergeRegionArea_1 = Module[\"_emscripten_bind_rcConfig_set_mergeRegionArea_1\"] = Module[\"asm\"][\"V\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_maxVertsPerPoly_0 = Module[\"_emscripten_bind_rcConfig_get_maxVertsPerPoly_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_maxVertsPerPoly_0 = Module[\"_emscripten_bind_rcConfig_get_maxVertsPerPoly_0\"] = Module[\"asm\"][\"W\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_maxVertsPerPoly_1 = Module[\"_emscripten_bind_rcConfig_set_maxVertsPerPoly_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_maxVertsPerPoly_1 = Module[\"_emscripten_bind_rcConfig_set_maxVertsPerPoly_1\"] = Module[\"asm\"][\"X\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_detailSampleDist_0 = Module[\"_emscripten_bind_rcConfig_get_detailSampleDist_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_detailSampleDist_0 = Module[\"_emscripten_bind_rcConfig_get_detailSampleDist_0\"] = Module[\"asm\"][\"Y\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_detailSampleDist_1 = Module[\"_emscripten_bind_rcConfig_set_detailSampleDist_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_detailSampleDist_1 = Module[\"_emscripten_bind_rcConfig_set_detailSampleDist_1\"] = Module[\"asm\"][\"Z\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_get_detailSampleMaxError_0 = Module[\"_emscripten_bind_rcConfig_get_detailSampleMaxError_0\"] = function() {\n            return (_emscripten_bind_rcConfig_get_detailSampleMaxError_0 = Module[\"_emscripten_bind_rcConfig_get_detailSampleMaxError_0\"] = Module[\"asm\"][\"_\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig_set_detailSampleMaxError_1 = Module[\"_emscripten_bind_rcConfig_set_detailSampleMaxError_1\"] = function() {\n            return (_emscripten_bind_rcConfig_set_detailSampleMaxError_1 = Module[\"_emscripten_bind_rcConfig_set_detailSampleMaxError_1\"] = Module[\"asm\"][\"$\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_rcConfig___destroy___0 = Module[\"_emscripten_bind_rcConfig___destroy___0\"] = function() {\n            return (_emscripten_bind_rcConfig___destroy___0 = Module[\"_emscripten_bind_rcConfig___destroy___0\"] = Module[\"asm\"][\"aa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_Vec3_0 = Module[\"_emscripten_bind_Vec3_Vec3_0\"] = function() {\n            return (_emscripten_bind_Vec3_Vec3_0 = Module[\"_emscripten_bind_Vec3_Vec3_0\"] = Module[\"asm\"][\"ba\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_Vec3_3 = Module[\"_emscripten_bind_Vec3_Vec3_3\"] = function() {\n            return (_emscripten_bind_Vec3_Vec3_3 = Module[\"_emscripten_bind_Vec3_Vec3_3\"] = Module[\"asm\"][\"ca\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_get_x_0 = Module[\"_emscripten_bind_Vec3_get_x_0\"] = function() {\n            return (_emscripten_bind_Vec3_get_x_0 = Module[\"_emscripten_bind_Vec3_get_x_0\"] = Module[\"asm\"][\"da\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_set_x_1 = Module[\"_emscripten_bind_Vec3_set_x_1\"] = function() {\n            return (_emscripten_bind_Vec3_set_x_1 = Module[\"_emscripten_bind_Vec3_set_x_1\"] = Module[\"asm\"][\"ea\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_get_y_0 = Module[\"_emscripten_bind_Vec3_get_y_0\"] = function() {\n            return (_emscripten_bind_Vec3_get_y_0 = Module[\"_emscripten_bind_Vec3_get_y_0\"] = Module[\"asm\"][\"fa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_set_y_1 = Module[\"_emscripten_bind_Vec3_set_y_1\"] = function() {\n            return (_emscripten_bind_Vec3_set_y_1 = Module[\"_emscripten_bind_Vec3_set_y_1\"] = Module[\"asm\"][\"ga\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_get_z_0 = Module[\"_emscripten_bind_Vec3_get_z_0\"] = function() {\n            return (_emscripten_bind_Vec3_get_z_0 = Module[\"_emscripten_bind_Vec3_get_z_0\"] = Module[\"asm\"][\"ha\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3_set_z_1 = Module[\"_emscripten_bind_Vec3_set_z_1\"] = function() {\n            return (_emscripten_bind_Vec3_set_z_1 = Module[\"_emscripten_bind_Vec3_set_z_1\"] = Module[\"asm\"][\"ia\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Vec3___destroy___0 = Module[\"_emscripten_bind_Vec3___destroy___0\"] = function() {\n            return (_emscripten_bind_Vec3___destroy___0 = Module[\"_emscripten_bind_Vec3___destroy___0\"] = Module[\"asm\"][\"ja\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Triangle_Triangle_0 = Module[\"_emscripten_bind_Triangle_Triangle_0\"] = function() {\n            return (_emscripten_bind_Triangle_Triangle_0 = Module[\"_emscripten_bind_Triangle_Triangle_0\"] = Module[\"asm\"][\"ka\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Triangle_getPoint_1 = Module[\"_emscripten_bind_Triangle_getPoint_1\"] = function() {\n            return (_emscripten_bind_Triangle_getPoint_1 = Module[\"_emscripten_bind_Triangle_getPoint_1\"] = Module[\"asm\"][\"la\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Triangle___destroy___0 = Module[\"_emscripten_bind_Triangle___destroy___0\"] = function() {\n            return (_emscripten_bind_Triangle___destroy___0 = Module[\"_emscripten_bind_Triangle___destroy___0\"] = Module[\"asm\"][\"ma\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_DebugNavMesh_DebugNavMesh_0 = Module[\"_emscripten_bind_DebugNavMesh_DebugNavMesh_0\"] = function() {\n            return (_emscripten_bind_DebugNavMesh_DebugNavMesh_0 = Module[\"_emscripten_bind_DebugNavMesh_DebugNavMesh_0\"] = Module[\"asm\"][\"na\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_DebugNavMesh_getTriangleCount_0 = Module[\"_emscripten_bind_DebugNavMesh_getTriangleCount_0\"] = function() {\n            return (_emscripten_bind_DebugNavMesh_getTriangleCount_0 = Module[\"_emscripten_bind_DebugNavMesh_getTriangleCount_0\"] = Module[\"asm\"][\"oa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_DebugNavMesh_getTriangle_1 = Module[\"_emscripten_bind_DebugNavMesh_getTriangle_1\"] = function() {\n            return (_emscripten_bind_DebugNavMesh_getTriangle_1 = Module[\"_emscripten_bind_DebugNavMesh_getTriangle_1\"] = Module[\"asm\"][\"pa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_DebugNavMesh___destroy___0 = Module[\"_emscripten_bind_DebugNavMesh___destroy___0\"] = function() {\n            return (_emscripten_bind_DebugNavMesh___destroy___0 = Module[\"_emscripten_bind_DebugNavMesh___destroy___0\"] = Module[\"asm\"][\"qa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtNavMesh___destroy___0 = Module[\"_emscripten_bind_dtNavMesh___destroy___0\"] = function() {\n            return (_emscripten_bind_dtNavMesh___destroy___0 = Module[\"_emscripten_bind_dtNavMesh___destroy___0\"] = Module[\"asm\"][\"ra\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavmeshData_NavmeshData_0 = Module[\"_emscripten_bind_NavmeshData_NavmeshData_0\"] = function() {\n            return (_emscripten_bind_NavmeshData_NavmeshData_0 = Module[\"_emscripten_bind_NavmeshData_NavmeshData_0\"] = Module[\"asm\"][\"sa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavmeshData_get_dataPointer_0 = Module[\"_emscripten_bind_NavmeshData_get_dataPointer_0\"] = function() {\n            return (_emscripten_bind_NavmeshData_get_dataPointer_0 = Module[\"_emscripten_bind_NavmeshData_get_dataPointer_0\"] = Module[\"asm\"][\"ta\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavmeshData_set_dataPointer_1 = Module[\"_emscripten_bind_NavmeshData_set_dataPointer_1\"] = function() {\n            return (_emscripten_bind_NavmeshData_set_dataPointer_1 = Module[\"_emscripten_bind_NavmeshData_set_dataPointer_1\"] = Module[\"asm\"][\"ua\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavmeshData_get_size_0 = Module[\"_emscripten_bind_NavmeshData_get_size_0\"] = function() {\n            return (_emscripten_bind_NavmeshData_get_size_0 = Module[\"_emscripten_bind_NavmeshData_get_size_0\"] = Module[\"asm\"][\"va\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavmeshData_set_size_1 = Module[\"_emscripten_bind_NavmeshData_set_size_1\"] = function() {\n            return (_emscripten_bind_NavmeshData_set_size_1 = Module[\"_emscripten_bind_NavmeshData_set_size_1\"] = Module[\"asm\"][\"wa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavmeshData___destroy___0 = Module[\"_emscripten_bind_NavmeshData___destroy___0\"] = function() {\n            return (_emscripten_bind_NavmeshData___destroy___0 = Module[\"_emscripten_bind_NavmeshData___destroy___0\"] = Module[\"asm\"][\"xa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavPath_getPointCount_0 = Module[\"_emscripten_bind_NavPath_getPointCount_0\"] = function() {\n            return (_emscripten_bind_NavPath_getPointCount_0 = Module[\"_emscripten_bind_NavPath_getPointCount_0\"] = Module[\"asm\"][\"ya\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavPath_getPoint_1 = Module[\"_emscripten_bind_NavPath_getPoint_1\"] = function() {\n            return (_emscripten_bind_NavPath_getPoint_1 = Module[\"_emscripten_bind_NavPath_getPoint_1\"] = Module[\"asm\"][\"za\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavPath___destroy___0 = Module[\"_emscripten_bind_NavPath___destroy___0\"] = function() {\n            return (_emscripten_bind_NavPath___destroy___0 = Module[\"_emscripten_bind_NavPath___destroy___0\"] = Module[\"asm\"][\"Aa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtObstacleRef___destroy___0 = Module[\"_emscripten_bind_dtObstacleRef___destroy___0\"] = function() {\n            return (_emscripten_bind_dtObstacleRef___destroy___0 = Module[\"_emscripten_bind_dtObstacleRef___destroy___0\"] = Module[\"asm\"][\"Ba\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0\"] = Module[\"asm\"][\"Ca\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_radius_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_radius_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_radius_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_radius_0\"] = Module[\"asm\"][\"Da\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_radius_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_radius_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_radius_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_radius_1\"] = Module[\"asm\"][\"Ea\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_height_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_height_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_height_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_height_0\"] = Module[\"asm\"][\"Fa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_height_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_height_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_height_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_height_1\"] = Module[\"asm\"][\"Ga\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0\"] = Module[\"asm\"][\"Ha\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1\"] = Module[\"asm\"][\"Ia\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0\"] = Module[\"asm\"][\"Ja\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1\"] = Module[\"asm\"][\"Ka\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0\"] = Module[\"asm\"][\"La\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1\"] = Module[\"asm\"][\"Ma\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0\"] = Module[\"asm\"][\"Na\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1\"] = Module[\"asm\"][\"Oa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_separationWeight_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_separationWeight_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_separationWeight_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_separationWeight_0\"] = Module[\"asm\"][\"Pa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_separationWeight_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_separationWeight_1\"] = Module[\"asm\"][\"Qa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_updateFlags_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_updateFlags_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_updateFlags_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_updateFlags_0\"] = Module[\"asm\"][\"Ra\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_updateFlags_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_updateFlags_1\"] = Module[\"asm\"][\"Sa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0\"] = Module[\"asm\"][\"Ta\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1\"] = Module[\"asm\"][\"Ua\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0\"] = Module[\"asm\"][\"Va\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1\"] = Module[\"asm\"][\"Wa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_get_userData_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_userData_0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_get_userData_0 = Module[\"_emscripten_bind_dtCrowdAgentParams_get_userData_0\"] = Module[\"asm\"][\"Xa\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams_set_userData_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_userData_1\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams_set_userData_1 = Module[\"_emscripten_bind_dtCrowdAgentParams_set_userData_1\"] = Module[\"asm\"][\"Ya\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_dtCrowdAgentParams___destroy___0 = Module[\"_emscripten_bind_dtCrowdAgentParams___destroy___0\"] = function() {\n            return (_emscripten_bind_dtCrowdAgentParams___destroy___0 = Module[\"_emscripten_bind_dtCrowdAgentParams___destroy___0\"] = Module[\"asm\"][\"Za\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_NavMesh_0 = Module[\"_emscripten_bind_NavMesh_NavMesh_0\"] = function() {\n            return (_emscripten_bind_NavMesh_NavMesh_0 = Module[\"_emscripten_bind_NavMesh_NavMesh_0\"] = Module[\"asm\"][\"_a\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_destroy_0 = Module[\"_emscripten_bind_NavMesh_destroy_0\"] = function() {\n            return (_emscripten_bind_NavMesh_destroy_0 = Module[\"_emscripten_bind_NavMesh_destroy_0\"] = Module[\"asm\"][\"$a\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_build_5 = Module[\"_emscripten_bind_NavMesh_build_5\"] = function() {\n            return (_emscripten_bind_NavMesh_build_5 = Module[\"_emscripten_bind_NavMesh_build_5\"] = Module[\"asm\"][\"ab\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_buildFromNavmeshData_1 = Module[\"_emscripten_bind_NavMesh_buildFromNavmeshData_1\"] = function() {\n            return (_emscripten_bind_NavMesh_buildFromNavmeshData_1 = Module[\"_emscripten_bind_NavMesh_buildFromNavmeshData_1\"] = Module[\"asm\"][\"bb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_getNavmeshData_0 = Module[\"_emscripten_bind_NavMesh_getNavmeshData_0\"] = function() {\n            return (_emscripten_bind_NavMesh_getNavmeshData_0 = Module[\"_emscripten_bind_NavMesh_getNavmeshData_0\"] = Module[\"asm\"][\"cb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_freeNavmeshData_1 = Module[\"_emscripten_bind_NavMesh_freeNavmeshData_1\"] = function() {\n            return (_emscripten_bind_NavMesh_freeNavmeshData_1 = Module[\"_emscripten_bind_NavMesh_freeNavmeshData_1\"] = Module[\"asm\"][\"db\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_getDebugNavMesh_0 = Module[\"_emscripten_bind_NavMesh_getDebugNavMesh_0\"] = function() {\n            return (_emscripten_bind_NavMesh_getDebugNavMesh_0 = Module[\"_emscripten_bind_NavMesh_getDebugNavMesh_0\"] = Module[\"asm\"][\"eb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_getClosestPoint_1 = Module[\"_emscripten_bind_NavMesh_getClosestPoint_1\"] = function() {\n            return (_emscripten_bind_NavMesh_getClosestPoint_1 = Module[\"_emscripten_bind_NavMesh_getClosestPoint_1\"] = Module[\"asm\"][\"fb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_getRandomPointAround_2 = Module[\"_emscripten_bind_NavMesh_getRandomPointAround_2\"] = function() {\n            return (_emscripten_bind_NavMesh_getRandomPointAround_2 = Module[\"_emscripten_bind_NavMesh_getRandomPointAround_2\"] = Module[\"asm\"][\"gb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_moveAlong_2 = Module[\"_emscripten_bind_NavMesh_moveAlong_2\"] = function() {\n            return (_emscripten_bind_NavMesh_moveAlong_2 = Module[\"_emscripten_bind_NavMesh_moveAlong_2\"] = Module[\"asm\"][\"hb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_getNavMesh_0 = Module[\"_emscripten_bind_NavMesh_getNavMesh_0\"] = function() {\n            return (_emscripten_bind_NavMesh_getNavMesh_0 = Module[\"_emscripten_bind_NavMesh_getNavMesh_0\"] = Module[\"asm\"][\"ib\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_computePath_2 = Module[\"_emscripten_bind_NavMesh_computePath_2\"] = function() {\n            return (_emscripten_bind_NavMesh_computePath_2 = Module[\"_emscripten_bind_NavMesh_computePath_2\"] = Module[\"asm\"][\"jb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_setDefaultQueryExtent_1 = Module[\"_emscripten_bind_NavMesh_setDefaultQueryExtent_1\"] = function() {\n            return (_emscripten_bind_NavMesh_setDefaultQueryExtent_1 = Module[\"_emscripten_bind_NavMesh_setDefaultQueryExtent_1\"] = Module[\"asm\"][\"kb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_getDefaultQueryExtent_0 = Module[\"_emscripten_bind_NavMesh_getDefaultQueryExtent_0\"] = function() {\n            return (_emscripten_bind_NavMesh_getDefaultQueryExtent_0 = Module[\"_emscripten_bind_NavMesh_getDefaultQueryExtent_0\"] = Module[\"asm\"][\"lb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_addCylinderObstacle_3 = Module[\"_emscripten_bind_NavMesh_addCylinderObstacle_3\"] = function() {\n            return (_emscripten_bind_NavMesh_addCylinderObstacle_3 = Module[\"_emscripten_bind_NavMesh_addCylinderObstacle_3\"] = Module[\"asm\"][\"mb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_addBoxObstacle_3 = Module[\"_emscripten_bind_NavMesh_addBoxObstacle_3\"] = function() {\n            return (_emscripten_bind_NavMesh_addBoxObstacle_3 = Module[\"_emscripten_bind_NavMesh_addBoxObstacle_3\"] = Module[\"asm\"][\"nb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_removeObstacle_1 = Module[\"_emscripten_bind_NavMesh_removeObstacle_1\"] = function() {\n            return (_emscripten_bind_NavMesh_removeObstacle_1 = Module[\"_emscripten_bind_NavMesh_removeObstacle_1\"] = Module[\"asm\"][\"ob\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh_update_0 = Module[\"_emscripten_bind_NavMesh_update_0\"] = function() {\n            return (_emscripten_bind_NavMesh_update_0 = Module[\"_emscripten_bind_NavMesh_update_0\"] = Module[\"asm\"][\"pb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_NavMesh___destroy___0 = Module[\"_emscripten_bind_NavMesh___destroy___0\"] = function() {\n            return (_emscripten_bind_NavMesh___destroy___0 = Module[\"_emscripten_bind_NavMesh___destroy___0\"] = Module[\"asm\"][\"qb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_Crowd_3 = Module[\"_emscripten_bind_Crowd_Crowd_3\"] = function() {\n            return (_emscripten_bind_Crowd_Crowd_3 = Module[\"_emscripten_bind_Crowd_Crowd_3\"] = Module[\"asm\"][\"rb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_destroy_0 = Module[\"_emscripten_bind_Crowd_destroy_0\"] = function() {\n            return (_emscripten_bind_Crowd_destroy_0 = Module[\"_emscripten_bind_Crowd_destroy_0\"] = Module[\"asm\"][\"sb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_addAgent_2 = Module[\"_emscripten_bind_Crowd_addAgent_2\"] = function() {\n            return (_emscripten_bind_Crowd_addAgent_2 = Module[\"_emscripten_bind_Crowd_addAgent_2\"] = Module[\"asm\"][\"tb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_removeAgent_1 = Module[\"_emscripten_bind_Crowd_removeAgent_1\"] = function() {\n            return (_emscripten_bind_Crowd_removeAgent_1 = Module[\"_emscripten_bind_Crowd_removeAgent_1\"] = Module[\"asm\"][\"ub\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_update_1 = Module[\"_emscripten_bind_Crowd_update_1\"] = function() {\n            return (_emscripten_bind_Crowd_update_1 = Module[\"_emscripten_bind_Crowd_update_1\"] = Module[\"asm\"][\"vb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getAgentPosition_1 = Module[\"_emscripten_bind_Crowd_getAgentPosition_1\"] = function() {\n            return (_emscripten_bind_Crowd_getAgentPosition_1 = Module[\"_emscripten_bind_Crowd_getAgentPosition_1\"] = Module[\"asm\"][\"wb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getAgentVelocity_1 = Module[\"_emscripten_bind_Crowd_getAgentVelocity_1\"] = function() {\n            return (_emscripten_bind_Crowd_getAgentVelocity_1 = Module[\"_emscripten_bind_Crowd_getAgentVelocity_1\"] = Module[\"asm\"][\"xb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getAgentNextTargetPath_1 = Module[\"_emscripten_bind_Crowd_getAgentNextTargetPath_1\"] = function() {\n            return (_emscripten_bind_Crowd_getAgentNextTargetPath_1 = Module[\"_emscripten_bind_Crowd_getAgentNextTargetPath_1\"] = Module[\"asm\"][\"yb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getAgentState_1 = Module[\"_emscripten_bind_Crowd_getAgentState_1\"] = function() {\n            return (_emscripten_bind_Crowd_getAgentState_1 = Module[\"_emscripten_bind_Crowd_getAgentState_1\"] = Module[\"asm\"][\"zb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_overOffmeshConnection_1 = Module[\"_emscripten_bind_Crowd_overOffmeshConnection_1\"] = function() {\n            return (_emscripten_bind_Crowd_overOffmeshConnection_1 = Module[\"_emscripten_bind_Crowd_overOffmeshConnection_1\"] = Module[\"asm\"][\"Ab\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_agentGoto_2 = Module[\"_emscripten_bind_Crowd_agentGoto_2\"] = function() {\n            return (_emscripten_bind_Crowd_agentGoto_2 = Module[\"_emscripten_bind_Crowd_agentGoto_2\"] = Module[\"asm\"][\"Bb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_agentTeleport_2 = Module[\"_emscripten_bind_Crowd_agentTeleport_2\"] = function() {\n            return (_emscripten_bind_Crowd_agentTeleport_2 = Module[\"_emscripten_bind_Crowd_agentTeleport_2\"] = Module[\"asm\"][\"Cb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getAgentParameters_1 = Module[\"_emscripten_bind_Crowd_getAgentParameters_1\"] = function() {\n            return (_emscripten_bind_Crowd_getAgentParameters_1 = Module[\"_emscripten_bind_Crowd_getAgentParameters_1\"] = Module[\"asm\"][\"Db\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_setAgentParameters_2 = Module[\"_emscripten_bind_Crowd_setAgentParameters_2\"] = function() {\n            return (_emscripten_bind_Crowd_setAgentParameters_2 = Module[\"_emscripten_bind_Crowd_setAgentParameters_2\"] = Module[\"asm\"][\"Eb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_setDefaultQueryExtent_1 = Module[\"_emscripten_bind_Crowd_setDefaultQueryExtent_1\"] = function() {\n            return (_emscripten_bind_Crowd_setDefaultQueryExtent_1 = Module[\"_emscripten_bind_Crowd_setDefaultQueryExtent_1\"] = Module[\"asm\"][\"Fb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getDefaultQueryExtent_0 = Module[\"_emscripten_bind_Crowd_getDefaultQueryExtent_0\"] = function() {\n            return (_emscripten_bind_Crowd_getDefaultQueryExtent_0 = Module[\"_emscripten_bind_Crowd_getDefaultQueryExtent_0\"] = Module[\"asm\"][\"Gb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd_getCorners_1 = Module[\"_emscripten_bind_Crowd_getCorners_1\"] = function() {\n            return (_emscripten_bind_Crowd_getCorners_1 = Module[\"_emscripten_bind_Crowd_getCorners_1\"] = Module[\"asm\"][\"Hb\"]).apply(null, arguments);\n        };\n        var _emscripten_bind_Crowd___destroy___0 = Module[\"_emscripten_bind_Crowd___destroy___0\"] = function() {\n            return (_emscripten_bind_Crowd___destroy___0 = Module[\"_emscripten_bind_Crowd___destroy___0\"] = Module[\"asm\"][\"Ib\"]).apply(null, arguments);\n        };\n        var _malloc = Module[\"_malloc\"] = function() {\n            return (_malloc = Module[\"_malloc\"] = Module[\"asm\"][\"Kb\"]).apply(null, arguments);\n        };\n        var _free = Module[\"_free\"] = function() {\n            return (_free = Module[\"_free\"] = Module[\"asm\"][\"Lb\"]).apply(null, arguments);\n        };\n        Module[\"UTF8ToString\"] = UTF8ToString;\n        Module[\"addFunction\"] = addFunction;\n        var calledRun;\n        dependenciesFulfilled = function runCaller() {\n            if (!calledRun) run();\n            if (!calledRun) dependenciesFulfilled = runCaller;\n        };\n        function run(args) {\n            args = args || arguments_;\n            if (runDependencies > 0) {\n                return;\n            }\n            preRun();\n            if (runDependencies > 0) {\n                return;\n            }\n            function doRun() {\n                if (calledRun) return;\n                calledRun = true;\n                Module[\"calledRun\"] = true;\n                if (ABORT) return;\n                initRuntime();\n                readyPromiseResolve(Module);\n                if (Module[\"onRuntimeInitialized\"]) Module[\"onRuntimeInitialized\"]();\n                postRun();\n            }\n            if (Module[\"setStatus\"]) {\n                Module[\"setStatus\"](\"Running...\");\n                setTimeout(function() {\n                    setTimeout(function() {\n                        Module[\"setStatus\"](\"\");\n                    }, 1);\n                    doRun();\n                }, 1);\n            } else {\n                doRun();\n            }\n        }\n        Module[\"run\"] = run;\n        if (Module[\"preInit\"]) {\n            if (typeof Module[\"preInit\"] == \"function\") Module[\"preInit\"] = [\n                Module[\"preInit\"]\n            ];\n            while(Module[\"preInit\"].length > 0){\n                Module[\"preInit\"].pop()();\n            }\n        }\n        run();\n        function WrapperObject() {}\n        WrapperObject.prototype = Object.create(WrapperObject.prototype);\n        WrapperObject.prototype.constructor = WrapperObject;\n        WrapperObject.prototype.__class__ = WrapperObject;\n        WrapperObject.__cache__ = {};\n        Module[\"WrapperObject\"] = WrapperObject;\n        function getCache(__class__) {\n            return (__class__ || WrapperObject).__cache__;\n        }\n        Module[\"getCache\"] = getCache;\n        function wrapPointer(ptr, __class__) {\n            var cache = getCache(__class__);\n            var ret = cache[ptr];\n            if (ret) return ret;\n            ret = Object.create((__class__ || WrapperObject).prototype);\n            ret.ptr = ptr;\n            return cache[ptr] = ret;\n        }\n        Module[\"wrapPointer\"] = wrapPointer;\n        function castObject(obj, __class__) {\n            return wrapPointer(obj.ptr, __class__);\n        }\n        Module[\"castObject\"] = castObject;\n        Module[\"NULL\"] = wrapPointer(0);\n        function destroy(obj) {\n            if (!obj[\"__destroy__\"]) throw \"Error: Cannot destroy object. (Did you create it yourself?)\";\n            obj[\"__destroy__\"]();\n            delete getCache(obj.__class__)[obj.ptr];\n        }\n        Module[\"destroy\"] = destroy;\n        function compare(obj1, obj2) {\n            return obj1.ptr === obj2.ptr;\n        }\n        Module[\"compare\"] = compare;\n        function getPointer(obj) {\n            return obj.ptr;\n        }\n        Module[\"getPointer\"] = getPointer;\n        function getClass(obj) {\n            return obj.__class__;\n        }\n        Module[\"getClass\"] = getClass;\n        var ensureCache = {\n            buffer: 0,\n            size: 0,\n            pos: 0,\n            temps: [],\n            needed: 0,\n            prepare: function() {\n                if (ensureCache.needed) {\n                    for(var i = 0; i < ensureCache.temps.length; i++){\n                        Module[\"_free\"](ensureCache.temps[i]);\n                    }\n                    ensureCache.temps.length = 0;\n                    Module[\"_free\"](ensureCache.buffer);\n                    ensureCache.buffer = 0;\n                    ensureCache.size += ensureCache.needed;\n                    ensureCache.needed = 0;\n                }\n                if (!ensureCache.buffer) {\n                    ensureCache.size += 128;\n                    ensureCache.buffer = Module[\"_malloc\"](ensureCache.size);\n                    assert(ensureCache.buffer);\n                }\n                ensureCache.pos = 0;\n            },\n            alloc: function(array, view) {\n                assert(ensureCache.buffer);\n                var bytes = view.BYTES_PER_ELEMENT;\n                var len = array.length * bytes;\n                len = len + 7 & -8;\n                var ret;\n                if (ensureCache.pos + len >= ensureCache.size) {\n                    assert(len > 0);\n                    ensureCache.needed += len;\n                    ret = Module[\"_malloc\"](len);\n                    ensureCache.temps.push(ret);\n                } else {\n                    ret = ensureCache.buffer + ensureCache.pos;\n                    ensureCache.pos += len;\n                }\n                return ret;\n            },\n            copy: function(array, view, offset) {\n                offset >>>= 0;\n                var bytes = view.BYTES_PER_ELEMENT;\n                switch(bytes){\n                    case 2:\n                        offset >>>= 1;\n                        break;\n                    case 4:\n                        offset >>>= 2;\n                        break;\n                    case 8:\n                        offset >>>= 3;\n                        break;\n                }\n                for(var i = 0; i < array.length; i++){\n                    view[offset + i] = array[i];\n                }\n            }\n        };\n        function ensureInt32(value) {\n            if (typeof value === \"object\") {\n                var offset = ensureCache.alloc(value, HEAP32);\n                ensureCache.copy(value, HEAP32, offset);\n                return offset;\n            }\n            return value;\n        }\n        function ensureFloat32(value) {\n            if (typeof value === \"object\") {\n                var offset = ensureCache.alloc(value, HEAPF32);\n                ensureCache.copy(value, HEAPF32, offset);\n                return offset;\n            }\n            return value;\n        }\n        function VoidPtr() {\n            throw \"cannot construct a VoidPtr, no constructor in IDL\";\n        }\n        VoidPtr.prototype = Object.create(WrapperObject.prototype);\n        VoidPtr.prototype.constructor = VoidPtr;\n        VoidPtr.prototype.__class__ = VoidPtr;\n        VoidPtr.__cache__ = {};\n        Module[\"VoidPtr\"] = VoidPtr;\n        VoidPtr.prototype[\"__destroy__\"] = VoidPtr.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_VoidPtr___destroy___0(self1);\n        };\n        function rcConfig() {\n            this.ptr = _emscripten_bind_rcConfig_rcConfig_0();\n            getCache(rcConfig)[this.ptr] = this;\n        }\n        rcConfig.prototype = Object.create(WrapperObject.prototype);\n        rcConfig.prototype.constructor = rcConfig;\n        rcConfig.prototype.__class__ = rcConfig;\n        rcConfig.__cache__ = {};\n        Module[\"rcConfig\"] = rcConfig;\n        rcConfig.prototype[\"get_width\"] = rcConfig.prototype.get_width = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_width_0(self1);\n        };\n        rcConfig.prototype[\"set_width\"] = rcConfig.prototype.set_width = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_width_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"width\", {\n            get: rcConfig.prototype.get_width,\n            set: rcConfig.prototype.set_width\n        });\n        rcConfig.prototype[\"get_height\"] = rcConfig.prototype.get_height = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_height_0(self1);\n        };\n        rcConfig.prototype[\"set_height\"] = rcConfig.prototype.set_height = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_height_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"height\", {\n            get: rcConfig.prototype.get_height,\n            set: rcConfig.prototype.set_height\n        });\n        rcConfig.prototype[\"get_tileSize\"] = rcConfig.prototype.get_tileSize = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_tileSize_0(self1);\n        };\n        rcConfig.prototype[\"set_tileSize\"] = rcConfig.prototype.set_tileSize = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_tileSize_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"tileSize\", {\n            get: rcConfig.prototype.get_tileSize,\n            set: rcConfig.prototype.set_tileSize\n        });\n        rcConfig.prototype[\"get_borderSize\"] = rcConfig.prototype.get_borderSize = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_borderSize_0(self1);\n        };\n        rcConfig.prototype[\"set_borderSize\"] = rcConfig.prototype.set_borderSize = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_borderSize_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"borderSize\", {\n            get: rcConfig.prototype.get_borderSize,\n            set: rcConfig.prototype.set_borderSize\n        });\n        rcConfig.prototype[\"get_cs\"] = rcConfig.prototype.get_cs = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_cs_0(self1);\n        };\n        rcConfig.prototype[\"set_cs\"] = rcConfig.prototype.set_cs = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_cs_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"cs\", {\n            get: rcConfig.prototype.get_cs,\n            set: rcConfig.prototype.set_cs\n        });\n        rcConfig.prototype[\"get_ch\"] = rcConfig.prototype.get_ch = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_ch_0(self1);\n        };\n        rcConfig.prototype[\"set_ch\"] = rcConfig.prototype.set_ch = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_ch_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"ch\", {\n            get: rcConfig.prototype.get_ch,\n            set: rcConfig.prototype.set_ch\n        });\n        rcConfig.prototype[\"get_bmin\"] = rcConfig.prototype.get_bmin = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            return _emscripten_bind_rcConfig_get_bmin_1(self1, arg0);\n        };\n        rcConfig.prototype[\"set_bmin\"] = rcConfig.prototype.set_bmin = function(arg0, arg1) {\n            var self1 = this.ptr;\n            ensureCache.prepare();\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            if (arg1 && typeof arg1 === \"object\") arg1 = arg1.ptr;\n            _emscripten_bind_rcConfig_set_bmin_2(self1, arg0, arg1);\n        };\n        Object.defineProperty(rcConfig.prototype, \"bmin\", {\n            get: rcConfig.prototype.get_bmin,\n            set: rcConfig.prototype.set_bmin\n        });\n        rcConfig.prototype[\"get_bmax\"] = rcConfig.prototype.get_bmax = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            return _emscripten_bind_rcConfig_get_bmax_1(self1, arg0);\n        };\n        rcConfig.prototype[\"set_bmax\"] = rcConfig.prototype.set_bmax = function(arg0, arg1) {\n            var self1 = this.ptr;\n            ensureCache.prepare();\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            if (arg1 && typeof arg1 === \"object\") arg1 = arg1.ptr;\n            _emscripten_bind_rcConfig_set_bmax_2(self1, arg0, arg1);\n        };\n        Object.defineProperty(rcConfig.prototype, \"bmax\", {\n            get: rcConfig.prototype.get_bmax,\n            set: rcConfig.prototype.set_bmax\n        });\n        rcConfig.prototype[\"get_walkableSlopeAngle\"] = rcConfig.prototype.get_walkableSlopeAngle = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_walkableSlopeAngle_0(self1);\n        };\n        rcConfig.prototype[\"set_walkableSlopeAngle\"] = rcConfig.prototype.set_walkableSlopeAngle = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_walkableSlopeAngle_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"walkableSlopeAngle\", {\n            get: rcConfig.prototype.get_walkableSlopeAngle,\n            set: rcConfig.prototype.set_walkableSlopeAngle\n        });\n        rcConfig.prototype[\"get_walkableHeight\"] = rcConfig.prototype.get_walkableHeight = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_walkableHeight_0(self1);\n        };\n        rcConfig.prototype[\"set_walkableHeight\"] = rcConfig.prototype.set_walkableHeight = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_walkableHeight_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"walkableHeight\", {\n            get: rcConfig.prototype.get_walkableHeight,\n            set: rcConfig.prototype.set_walkableHeight\n        });\n        rcConfig.prototype[\"get_walkableClimb\"] = rcConfig.prototype.get_walkableClimb = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_walkableClimb_0(self1);\n        };\n        rcConfig.prototype[\"set_walkableClimb\"] = rcConfig.prototype.set_walkableClimb = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_walkableClimb_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"walkableClimb\", {\n            get: rcConfig.prototype.get_walkableClimb,\n            set: rcConfig.prototype.set_walkableClimb\n        });\n        rcConfig.prototype[\"get_walkableRadius\"] = rcConfig.prototype.get_walkableRadius = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_walkableRadius_0(self1);\n        };\n        rcConfig.prototype[\"set_walkableRadius\"] = rcConfig.prototype.set_walkableRadius = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_walkableRadius_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"walkableRadius\", {\n            get: rcConfig.prototype.get_walkableRadius,\n            set: rcConfig.prototype.set_walkableRadius\n        });\n        rcConfig.prototype[\"get_maxEdgeLen\"] = rcConfig.prototype.get_maxEdgeLen = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_maxEdgeLen_0(self1);\n        };\n        rcConfig.prototype[\"set_maxEdgeLen\"] = rcConfig.prototype.set_maxEdgeLen = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_maxEdgeLen_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"maxEdgeLen\", {\n            get: rcConfig.prototype.get_maxEdgeLen,\n            set: rcConfig.prototype.set_maxEdgeLen\n        });\n        rcConfig.prototype[\"get_maxSimplificationError\"] = rcConfig.prototype.get_maxSimplificationError = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_maxSimplificationError_0(self1);\n        };\n        rcConfig.prototype[\"set_maxSimplificationError\"] = rcConfig.prototype.set_maxSimplificationError = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_maxSimplificationError_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"maxSimplificationError\", {\n            get: rcConfig.prototype.get_maxSimplificationError,\n            set: rcConfig.prototype.set_maxSimplificationError\n        });\n        rcConfig.prototype[\"get_minRegionArea\"] = rcConfig.prototype.get_minRegionArea = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_minRegionArea_0(self1);\n        };\n        rcConfig.prototype[\"set_minRegionArea\"] = rcConfig.prototype.set_minRegionArea = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_minRegionArea_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"minRegionArea\", {\n            get: rcConfig.prototype.get_minRegionArea,\n            set: rcConfig.prototype.set_minRegionArea\n        });\n        rcConfig.prototype[\"get_mergeRegionArea\"] = rcConfig.prototype.get_mergeRegionArea = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_mergeRegionArea_0(self1);\n        };\n        rcConfig.prototype[\"set_mergeRegionArea\"] = rcConfig.prototype.set_mergeRegionArea = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_mergeRegionArea_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"mergeRegionArea\", {\n            get: rcConfig.prototype.get_mergeRegionArea,\n            set: rcConfig.prototype.set_mergeRegionArea\n        });\n        rcConfig.prototype[\"get_maxVertsPerPoly\"] = rcConfig.prototype.get_maxVertsPerPoly = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_maxVertsPerPoly_0(self1);\n        };\n        rcConfig.prototype[\"set_maxVertsPerPoly\"] = rcConfig.prototype.set_maxVertsPerPoly = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_maxVertsPerPoly_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"maxVertsPerPoly\", {\n            get: rcConfig.prototype.get_maxVertsPerPoly,\n            set: rcConfig.prototype.set_maxVertsPerPoly\n        });\n        rcConfig.prototype[\"get_detailSampleDist\"] = rcConfig.prototype.get_detailSampleDist = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_detailSampleDist_0(self1);\n        };\n        rcConfig.prototype[\"set_detailSampleDist\"] = rcConfig.prototype.set_detailSampleDist = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_detailSampleDist_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"detailSampleDist\", {\n            get: rcConfig.prototype.get_detailSampleDist,\n            set: rcConfig.prototype.set_detailSampleDist\n        });\n        rcConfig.prototype[\"get_detailSampleMaxError\"] = rcConfig.prototype.get_detailSampleMaxError = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_rcConfig_get_detailSampleMaxError_0(self1);\n        };\n        rcConfig.prototype[\"set_detailSampleMaxError\"] = rcConfig.prototype.set_detailSampleMaxError = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_rcConfig_set_detailSampleMaxError_1(self1, arg0);\n        };\n        Object.defineProperty(rcConfig.prototype, \"detailSampleMaxError\", {\n            get: rcConfig.prototype.get_detailSampleMaxError,\n            set: rcConfig.prototype.set_detailSampleMaxError\n        });\n        rcConfig.prototype[\"__destroy__\"] = rcConfig.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_rcConfig___destroy___0(self1);\n        };\n        function Vec3(x, y, z) {\n            if (x && typeof x === \"object\") x = x.ptr;\n            if (y && typeof y === \"object\") y = y.ptr;\n            if (z && typeof z === \"object\") z = z.ptr;\n            if (x === undefined) {\n                this.ptr = _emscripten_bind_Vec3_Vec3_0();\n                getCache(Vec3)[this.ptr] = this;\n                return;\n            }\n            if (y === undefined) {\n                this.ptr = _emscripten_bind_Vec3_Vec3_1(x);\n                getCache(Vec3)[this.ptr] = this;\n                return;\n            }\n            if (z === undefined) {\n                this.ptr = _emscripten_bind_Vec3_Vec3_2(x, y);\n                getCache(Vec3)[this.ptr] = this;\n                return;\n            }\n            this.ptr = _emscripten_bind_Vec3_Vec3_3(x, y, z);\n            getCache(Vec3)[this.ptr] = this;\n        }\n        Vec3.prototype = Object.create(WrapperObject.prototype);\n        Vec3.prototype.constructor = Vec3;\n        Vec3.prototype.__class__ = Vec3;\n        Vec3.__cache__ = {};\n        Module[\"Vec3\"] = Vec3;\n        Vec3.prototype[\"get_x\"] = Vec3.prototype.get_x = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_Vec3_get_x_0(self1);\n        };\n        Vec3.prototype[\"set_x\"] = Vec3.prototype.set_x = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_Vec3_set_x_1(self1, arg0);\n        };\n        Object.defineProperty(Vec3.prototype, \"x\", {\n            get: Vec3.prototype.get_x,\n            set: Vec3.prototype.set_x\n        });\n        Vec3.prototype[\"get_y\"] = Vec3.prototype.get_y = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_Vec3_get_y_0(self1);\n        };\n        Vec3.prototype[\"set_y\"] = Vec3.prototype.set_y = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_Vec3_set_y_1(self1, arg0);\n        };\n        Object.defineProperty(Vec3.prototype, \"y\", {\n            get: Vec3.prototype.get_y,\n            set: Vec3.prototype.set_y\n        });\n        Vec3.prototype[\"get_z\"] = Vec3.prototype.get_z = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_Vec3_get_z_0(self1);\n        };\n        Vec3.prototype[\"set_z\"] = Vec3.prototype.set_z = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_Vec3_set_z_1(self1, arg0);\n        };\n        Object.defineProperty(Vec3.prototype, \"z\", {\n            get: Vec3.prototype.get_z,\n            set: Vec3.prototype.set_z\n        });\n        Vec3.prototype[\"__destroy__\"] = Vec3.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_Vec3___destroy___0(self1);\n        };\n        function Triangle() {\n            this.ptr = _emscripten_bind_Triangle_Triangle_0();\n            getCache(Triangle)[this.ptr] = this;\n        }\n        Triangle.prototype = Object.create(WrapperObject.prototype);\n        Triangle.prototype.constructor = Triangle;\n        Triangle.prototype.__class__ = Triangle;\n        Triangle.__cache__ = {};\n        Module[\"Triangle\"] = Triangle;\n        Triangle.prototype[\"getPoint\"] = Triangle.prototype.getPoint = function(n) {\n            var self1 = this.ptr;\n            if (n && typeof n === \"object\") n = n.ptr;\n            return wrapPointer(_emscripten_bind_Triangle_getPoint_1(self1, n), Vec3);\n        };\n        Triangle.prototype[\"__destroy__\"] = Triangle.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_Triangle___destroy___0(self1);\n        };\n        function DebugNavMesh() {\n            this.ptr = _emscripten_bind_DebugNavMesh_DebugNavMesh_0();\n            getCache(DebugNavMesh)[this.ptr] = this;\n        }\n        DebugNavMesh.prototype = Object.create(WrapperObject.prototype);\n        DebugNavMesh.prototype.constructor = DebugNavMesh;\n        DebugNavMesh.prototype.__class__ = DebugNavMesh;\n        DebugNavMesh.__cache__ = {};\n        Module[\"DebugNavMesh\"] = DebugNavMesh;\n        DebugNavMesh.prototype[\"getTriangleCount\"] = DebugNavMesh.prototype.getTriangleCount = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_DebugNavMesh_getTriangleCount_0(self1);\n        };\n        DebugNavMesh.prototype[\"getTriangle\"] = DebugNavMesh.prototype.getTriangle = function(n) {\n            var self1 = this.ptr;\n            if (n && typeof n === \"object\") n = n.ptr;\n            return wrapPointer(_emscripten_bind_DebugNavMesh_getTriangle_1(self1, n), Triangle);\n        };\n        DebugNavMesh.prototype[\"__destroy__\"] = DebugNavMesh.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_DebugNavMesh___destroy___0(self1);\n        };\n        function dtNavMesh() {\n            throw \"cannot construct a dtNavMesh, no constructor in IDL\";\n        }\n        dtNavMesh.prototype = Object.create(WrapperObject.prototype);\n        dtNavMesh.prototype.constructor = dtNavMesh;\n        dtNavMesh.prototype.__class__ = dtNavMesh;\n        dtNavMesh.__cache__ = {};\n        Module[\"dtNavMesh\"] = dtNavMesh;\n        dtNavMesh.prototype[\"__destroy__\"] = dtNavMesh.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_dtNavMesh___destroy___0(self1);\n        };\n        function NavmeshData() {\n            this.ptr = _emscripten_bind_NavmeshData_NavmeshData_0();\n            getCache(NavmeshData)[this.ptr] = this;\n        }\n        NavmeshData.prototype = Object.create(WrapperObject.prototype);\n        NavmeshData.prototype.constructor = NavmeshData;\n        NavmeshData.prototype.__class__ = NavmeshData;\n        NavmeshData.__cache__ = {};\n        Module[\"NavmeshData\"] = NavmeshData;\n        NavmeshData.prototype[\"get_dataPointer\"] = NavmeshData.prototype.get_dataPointer = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_NavmeshData_get_dataPointer_0(self1);\n        };\n        NavmeshData.prototype[\"set_dataPointer\"] = NavmeshData.prototype.set_dataPointer = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_NavmeshData_set_dataPointer_1(self1, arg0);\n        };\n        Object.defineProperty(NavmeshData.prototype, \"dataPointer\", {\n            get: NavmeshData.prototype.get_dataPointer,\n            set: NavmeshData.prototype.set_dataPointer\n        });\n        NavmeshData.prototype[\"get_size\"] = NavmeshData.prototype.get_size = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_NavmeshData_get_size_0(self1);\n        };\n        NavmeshData.prototype[\"set_size\"] = NavmeshData.prototype.set_size = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_NavmeshData_set_size_1(self1, arg0);\n        };\n        Object.defineProperty(NavmeshData.prototype, \"size\", {\n            get: NavmeshData.prototype.get_size,\n            set: NavmeshData.prototype.set_size\n        });\n        NavmeshData.prototype[\"__destroy__\"] = NavmeshData.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_NavmeshData___destroy___0(self1);\n        };\n        function NavPath() {\n            throw \"cannot construct a NavPath, no constructor in IDL\";\n        }\n        NavPath.prototype = Object.create(WrapperObject.prototype);\n        NavPath.prototype.constructor = NavPath;\n        NavPath.prototype.__class__ = NavPath;\n        NavPath.__cache__ = {};\n        Module[\"NavPath\"] = NavPath;\n        NavPath.prototype[\"getPointCount\"] = NavPath.prototype.getPointCount = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_NavPath_getPointCount_0(self1);\n        };\n        NavPath.prototype[\"getPoint\"] = NavPath.prototype.getPoint = function(n) {\n            var self1 = this.ptr;\n            if (n && typeof n === \"object\") n = n.ptr;\n            return wrapPointer(_emscripten_bind_NavPath_getPoint_1(self1, n), Vec3);\n        };\n        NavPath.prototype[\"__destroy__\"] = NavPath.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_NavPath___destroy___0(self1);\n        };\n        function dtObstacleRef() {\n            throw \"cannot construct a dtObstacleRef, no constructor in IDL\";\n        }\n        dtObstacleRef.prototype = Object.create(WrapperObject.prototype);\n        dtObstacleRef.prototype.constructor = dtObstacleRef;\n        dtObstacleRef.prototype.__class__ = dtObstacleRef;\n        dtObstacleRef.__cache__ = {};\n        Module[\"dtObstacleRef\"] = dtObstacleRef;\n        dtObstacleRef.prototype[\"__destroy__\"] = dtObstacleRef.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_dtObstacleRef___destroy___0(self1);\n        };\n        function dtCrowdAgentParams() {\n            this.ptr = _emscripten_bind_dtCrowdAgentParams_dtCrowdAgentParams_0();\n            getCache(dtCrowdAgentParams)[this.ptr] = this;\n        }\n        dtCrowdAgentParams.prototype = Object.create(WrapperObject.prototype);\n        dtCrowdAgentParams.prototype.constructor = dtCrowdAgentParams;\n        dtCrowdAgentParams.prototype.__class__ = dtCrowdAgentParams;\n        dtCrowdAgentParams.__cache__ = {};\n        Module[\"dtCrowdAgentParams\"] = dtCrowdAgentParams;\n        dtCrowdAgentParams.prototype[\"get_radius\"] = dtCrowdAgentParams.prototype.get_radius = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_radius_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_radius\"] = dtCrowdAgentParams.prototype.set_radius = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_radius_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"radius\", {\n            get: dtCrowdAgentParams.prototype.get_radius,\n            set: dtCrowdAgentParams.prototype.set_radius\n        });\n        dtCrowdAgentParams.prototype[\"get_height\"] = dtCrowdAgentParams.prototype.get_height = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_height_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_height\"] = dtCrowdAgentParams.prototype.set_height = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_height_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"height\", {\n            get: dtCrowdAgentParams.prototype.get_height,\n            set: dtCrowdAgentParams.prototype.set_height\n        });\n        dtCrowdAgentParams.prototype[\"get_maxAcceleration\"] = dtCrowdAgentParams.prototype.get_maxAcceleration = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_maxAcceleration_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_maxAcceleration\"] = dtCrowdAgentParams.prototype.set_maxAcceleration = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_maxAcceleration_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"maxAcceleration\", {\n            get: dtCrowdAgentParams.prototype.get_maxAcceleration,\n            set: dtCrowdAgentParams.prototype.set_maxAcceleration\n        });\n        dtCrowdAgentParams.prototype[\"get_maxSpeed\"] = dtCrowdAgentParams.prototype.get_maxSpeed = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_maxSpeed_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_maxSpeed\"] = dtCrowdAgentParams.prototype.set_maxSpeed = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_maxSpeed_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"maxSpeed\", {\n            get: dtCrowdAgentParams.prototype.get_maxSpeed,\n            set: dtCrowdAgentParams.prototype.set_maxSpeed\n        });\n        dtCrowdAgentParams.prototype[\"get_collisionQueryRange\"] = dtCrowdAgentParams.prototype.get_collisionQueryRange = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_collisionQueryRange_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_collisionQueryRange\"] = dtCrowdAgentParams.prototype.set_collisionQueryRange = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_collisionQueryRange_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"collisionQueryRange\", {\n            get: dtCrowdAgentParams.prototype.get_collisionQueryRange,\n            set: dtCrowdAgentParams.prototype.set_collisionQueryRange\n        });\n        dtCrowdAgentParams.prototype[\"get_pathOptimizationRange\"] = dtCrowdAgentParams.prototype.get_pathOptimizationRange = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_pathOptimizationRange_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_pathOptimizationRange\"] = dtCrowdAgentParams.prototype.set_pathOptimizationRange = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_pathOptimizationRange_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"pathOptimizationRange\", {\n            get: dtCrowdAgentParams.prototype.get_pathOptimizationRange,\n            set: dtCrowdAgentParams.prototype.set_pathOptimizationRange\n        });\n        dtCrowdAgentParams.prototype[\"get_separationWeight\"] = dtCrowdAgentParams.prototype.get_separationWeight = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_separationWeight_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_separationWeight\"] = dtCrowdAgentParams.prototype.set_separationWeight = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_separationWeight_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"separationWeight\", {\n            get: dtCrowdAgentParams.prototype.get_separationWeight,\n            set: dtCrowdAgentParams.prototype.set_separationWeight\n        });\n        dtCrowdAgentParams.prototype[\"get_updateFlags\"] = dtCrowdAgentParams.prototype.get_updateFlags = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_updateFlags_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_updateFlags\"] = dtCrowdAgentParams.prototype.set_updateFlags = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_updateFlags_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"updateFlags\", {\n            get: dtCrowdAgentParams.prototype.get_updateFlags,\n            set: dtCrowdAgentParams.prototype.set_updateFlags\n        });\n        dtCrowdAgentParams.prototype[\"get_obstacleAvoidanceType\"] = dtCrowdAgentParams.prototype.get_obstacleAvoidanceType = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_obstacleAvoidanceType_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_obstacleAvoidanceType\"] = dtCrowdAgentParams.prototype.set_obstacleAvoidanceType = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_obstacleAvoidanceType_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"obstacleAvoidanceType\", {\n            get: dtCrowdAgentParams.prototype.get_obstacleAvoidanceType,\n            set: dtCrowdAgentParams.prototype.set_obstacleAvoidanceType\n        });\n        dtCrowdAgentParams.prototype[\"get_queryFilterType\"] = dtCrowdAgentParams.prototype.get_queryFilterType = function() {\n            var self1 = this.ptr;\n            return _emscripten_bind_dtCrowdAgentParams_get_queryFilterType_0(self1);\n        };\n        dtCrowdAgentParams.prototype[\"set_queryFilterType\"] = dtCrowdAgentParams.prototype.set_queryFilterType = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_queryFilterType_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"queryFilterType\", {\n            get: dtCrowdAgentParams.prototype.get_queryFilterType,\n            set: dtCrowdAgentParams.prototype.set_queryFilterType\n        });\n        dtCrowdAgentParams.prototype[\"get_userData\"] = dtCrowdAgentParams.prototype.get_userData = function() {\n            var self1 = this.ptr;\n            return wrapPointer(_emscripten_bind_dtCrowdAgentParams_get_userData_0(self1), VoidPtr);\n        };\n        dtCrowdAgentParams.prototype[\"set_userData\"] = dtCrowdAgentParams.prototype.set_userData = function(arg0) {\n            var self1 = this.ptr;\n            if (arg0 && typeof arg0 === \"object\") arg0 = arg0.ptr;\n            _emscripten_bind_dtCrowdAgentParams_set_userData_1(self1, arg0);\n        };\n        Object.defineProperty(dtCrowdAgentParams.prototype, \"userData\", {\n            get: dtCrowdAgentParams.prototype.get_userData,\n            set: dtCrowdAgentParams.prototype.set_userData\n        });\n        dtCrowdAgentParams.prototype[\"__destroy__\"] = dtCrowdAgentParams.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_dtCrowdAgentParams___destroy___0(self1);\n        };\n        function NavMesh() {\n            this.ptr = _emscripten_bind_NavMesh_NavMesh_0();\n            getCache(NavMesh)[this.ptr] = this;\n        }\n        NavMesh.prototype = Object.create(WrapperObject.prototype);\n        NavMesh.prototype.constructor = NavMesh;\n        NavMesh.prototype.__class__ = NavMesh;\n        NavMesh.__cache__ = {};\n        Module[\"NavMesh\"] = NavMesh;\n        NavMesh.prototype[\"destroy\"] = NavMesh.prototype.destroy = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_NavMesh_destroy_0(self1);\n        };\n        NavMesh.prototype[\"build\"] = NavMesh.prototype.build = function(positions, positionCount, indices, indexCount, config) {\n            var self1 = this.ptr;\n            ensureCache.prepare();\n            if (typeof positions == \"object\") {\n                positions = ensureFloat32(positions);\n            }\n            if (positionCount && typeof positionCount === \"object\") positionCount = positionCount.ptr;\n            if (typeof indices == \"object\") {\n                indices = ensureInt32(indices);\n            }\n            if (indexCount && typeof indexCount === \"object\") indexCount = indexCount.ptr;\n            if (config && typeof config === \"object\") config = config.ptr;\n            _emscripten_bind_NavMesh_build_5(self1, positions, positionCount, indices, indexCount, config);\n        };\n        NavMesh.prototype[\"buildFromNavmeshData\"] = NavMesh.prototype.buildFromNavmeshData = function(data) {\n            var self1 = this.ptr;\n            if (data && typeof data === \"object\") data = data.ptr;\n            _emscripten_bind_NavMesh_buildFromNavmeshData_1(self1, data);\n        };\n        NavMesh.prototype[\"getNavmeshData\"] = NavMesh.prototype.getNavmeshData = function() {\n            var self1 = this.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_getNavmeshData_0(self1), NavmeshData);\n        };\n        NavMesh.prototype[\"freeNavmeshData\"] = NavMesh.prototype.freeNavmeshData = function(data) {\n            var self1 = this.ptr;\n            if (data && typeof data === \"object\") data = data.ptr;\n            _emscripten_bind_NavMesh_freeNavmeshData_1(self1, data);\n        };\n        NavMesh.prototype[\"getDebugNavMesh\"] = NavMesh.prototype.getDebugNavMesh = function() {\n            var self1 = this.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_getDebugNavMesh_0(self1), DebugNavMesh);\n        };\n        NavMesh.prototype[\"getClosestPoint\"] = NavMesh.prototype.getClosestPoint = function(position) {\n            var self1 = this.ptr;\n            if (position && typeof position === \"object\") position = position.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_getClosestPoint_1(self1, position), Vec3);\n        };\n        NavMesh.prototype[\"getRandomPointAround\"] = NavMesh.prototype.getRandomPointAround = function(position, maxRadius) {\n            var self1 = this.ptr;\n            if (position && typeof position === \"object\") position = position.ptr;\n            if (maxRadius && typeof maxRadius === \"object\") maxRadius = maxRadius.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_getRandomPointAround_2(self1, position, maxRadius), Vec3);\n        };\n        NavMesh.prototype[\"moveAlong\"] = NavMesh.prototype.moveAlong = function(position, destination) {\n            var self1 = this.ptr;\n            if (position && typeof position === \"object\") position = position.ptr;\n            if (destination && typeof destination === \"object\") destination = destination.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_moveAlong_2(self1, position, destination), Vec3);\n        };\n        NavMesh.prototype[\"getNavMesh\"] = NavMesh.prototype.getNavMesh = function() {\n            var self1 = this.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_getNavMesh_0(self1), dtNavMesh);\n        };\n        NavMesh.prototype[\"computePath\"] = NavMesh.prototype.computePath = function(start, end) {\n            var self1 = this.ptr;\n            if (start && typeof start === \"object\") start = start.ptr;\n            if (end && typeof end === \"object\") end = end.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_computePath_2(self1, start, end), NavPath);\n        };\n        NavMesh.prototype[\"setDefaultQueryExtent\"] = NavMesh.prototype.setDefaultQueryExtent = function(extent) {\n            var self1 = this.ptr;\n            if (extent && typeof extent === \"object\") extent = extent.ptr;\n            _emscripten_bind_NavMesh_setDefaultQueryExtent_1(self1, extent);\n        };\n        NavMesh.prototype[\"getDefaultQueryExtent\"] = NavMesh.prototype.getDefaultQueryExtent = function() {\n            var self1 = this.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_getDefaultQueryExtent_0(self1), Vec3);\n        };\n        NavMesh.prototype[\"addCylinderObstacle\"] = NavMesh.prototype.addCylinderObstacle = function(position, radius, height) {\n            var self1 = this.ptr;\n            if (position && typeof position === \"object\") position = position.ptr;\n            if (radius && typeof radius === \"object\") radius = radius.ptr;\n            if (height && typeof height === \"object\") height = height.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_addCylinderObstacle_3(self1, position, radius, height), dtObstacleRef);\n        };\n        NavMesh.prototype[\"addBoxObstacle\"] = NavMesh.prototype.addBoxObstacle = function(position, extent, angle) {\n            var self1 = this.ptr;\n            if (position && typeof position === \"object\") position = position.ptr;\n            if (extent && typeof extent === \"object\") extent = extent.ptr;\n            if (angle && typeof angle === \"object\") angle = angle.ptr;\n            return wrapPointer(_emscripten_bind_NavMesh_addBoxObstacle_3(self1, position, extent, angle), dtObstacleRef);\n        };\n        NavMesh.prototype[\"removeObstacle\"] = NavMesh.prototype.removeObstacle = function(obstacle) {\n            var self1 = this.ptr;\n            if (obstacle && typeof obstacle === \"object\") obstacle = obstacle.ptr;\n            _emscripten_bind_NavMesh_removeObstacle_1(self1, obstacle);\n        };\n        NavMesh.prototype[\"update\"] = NavMesh.prototype.update = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_NavMesh_update_0(self1);\n        };\n        NavMesh.prototype[\"__destroy__\"] = NavMesh.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_NavMesh___destroy___0(self1);\n        };\n        function Crowd(maxAgents, maxAgentRadius, nav) {\n            if (maxAgents && typeof maxAgents === \"object\") maxAgents = maxAgents.ptr;\n            if (maxAgentRadius && typeof maxAgentRadius === \"object\") maxAgentRadius = maxAgentRadius.ptr;\n            if (nav && typeof nav === \"object\") nav = nav.ptr;\n            this.ptr = _emscripten_bind_Crowd_Crowd_3(maxAgents, maxAgentRadius, nav);\n            getCache(Crowd)[this.ptr] = this;\n        }\n        Crowd.prototype = Object.create(WrapperObject.prototype);\n        Crowd.prototype.constructor = Crowd;\n        Crowd.prototype.__class__ = Crowd;\n        Crowd.__cache__ = {};\n        Module[\"Crowd\"] = Crowd;\n        Crowd.prototype[\"destroy\"] = Crowd.prototype.destroy = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_Crowd_destroy_0(self1);\n        };\n        Crowd.prototype[\"addAgent\"] = Crowd.prototype.addAgent = function(position, params) {\n            var self1 = this.ptr;\n            if (position && typeof position === \"object\") position = position.ptr;\n            if (params && typeof params === \"object\") params = params.ptr;\n            return _emscripten_bind_Crowd_addAgent_2(self1, position, params);\n        };\n        Crowd.prototype[\"removeAgent\"] = Crowd.prototype.removeAgent = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            _emscripten_bind_Crowd_removeAgent_1(self1, idx);\n        };\n        Crowd.prototype[\"update\"] = Crowd.prototype.update = function(dt) {\n            var self1 = this.ptr;\n            if (dt && typeof dt === \"object\") dt = dt.ptr;\n            _emscripten_bind_Crowd_update_1(self1, dt);\n        };\n        Crowd.prototype[\"getAgentPosition\"] = Crowd.prototype.getAgentPosition = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return wrapPointer(_emscripten_bind_Crowd_getAgentPosition_1(self1, idx), Vec3);\n        };\n        Crowd.prototype[\"getAgentVelocity\"] = Crowd.prototype.getAgentVelocity = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return wrapPointer(_emscripten_bind_Crowd_getAgentVelocity_1(self1, idx), Vec3);\n        };\n        Crowd.prototype[\"getAgentNextTargetPath\"] = Crowd.prototype.getAgentNextTargetPath = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return wrapPointer(_emscripten_bind_Crowd_getAgentNextTargetPath_1(self1, idx), Vec3);\n        };\n        Crowd.prototype[\"getAgentState\"] = Crowd.prototype.getAgentState = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return _emscripten_bind_Crowd_getAgentState_1(self1, idx);\n        };\n        Crowd.prototype[\"overOffmeshConnection\"] = Crowd.prototype.overOffmeshConnection = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return !!_emscripten_bind_Crowd_overOffmeshConnection_1(self1, idx);\n        };\n        Crowd.prototype[\"agentGoto\"] = Crowd.prototype.agentGoto = function(idx, destination) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            if (destination && typeof destination === \"object\") destination = destination.ptr;\n            _emscripten_bind_Crowd_agentGoto_2(self1, idx, destination);\n        };\n        Crowd.prototype[\"agentTeleport\"] = Crowd.prototype.agentTeleport = function(idx, destination) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            if (destination && typeof destination === \"object\") destination = destination.ptr;\n            _emscripten_bind_Crowd_agentTeleport_2(self1, idx, destination);\n        };\n        Crowd.prototype[\"getAgentParameters\"] = Crowd.prototype.getAgentParameters = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return wrapPointer(_emscripten_bind_Crowd_getAgentParameters_1(self1, idx), dtCrowdAgentParams);\n        };\n        Crowd.prototype[\"setAgentParameters\"] = Crowd.prototype.setAgentParameters = function(idx, params) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            if (params && typeof params === \"object\") params = params.ptr;\n            _emscripten_bind_Crowd_setAgentParameters_2(self1, idx, params);\n        };\n        Crowd.prototype[\"setDefaultQueryExtent\"] = Crowd.prototype.setDefaultQueryExtent = function(extent) {\n            var self1 = this.ptr;\n            if (extent && typeof extent === \"object\") extent = extent.ptr;\n            _emscripten_bind_Crowd_setDefaultQueryExtent_1(self1, extent);\n        };\n        Crowd.prototype[\"getDefaultQueryExtent\"] = Crowd.prototype.getDefaultQueryExtent = function() {\n            var self1 = this.ptr;\n            return wrapPointer(_emscripten_bind_Crowd_getDefaultQueryExtent_0(self1), Vec3);\n        };\n        Crowd.prototype[\"getCorners\"] = Crowd.prototype.getCorners = function(idx) {\n            var self1 = this.ptr;\n            if (idx && typeof idx === \"object\") idx = idx.ptr;\n            return wrapPointer(_emscripten_bind_Crowd_getCorners_1(self1, idx), NavPath);\n        };\n        Crowd.prototype[\"__destroy__\"] = Crowd.prototype.__destroy__ = function() {\n            var self1 = this.ptr;\n            _emscripten_bind_Crowd___destroy___0(self1);\n        };\n        return Module.ready;\n    };\n}();\n/* harmony default export */ __webpack_exports__[\"default\"] = (Module);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@splinetool/runtime/build/navmesh.js\n"));

/***/ })

}]);